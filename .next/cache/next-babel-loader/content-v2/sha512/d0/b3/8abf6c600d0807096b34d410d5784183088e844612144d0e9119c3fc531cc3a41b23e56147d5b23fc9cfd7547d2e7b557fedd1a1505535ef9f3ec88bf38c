{"ast":null,"code":"import database from '../firebase/firebase';\n\nvar setDataLoading = function setDataLoading(loading) {\n  return {\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading\n  };\n};\n\nvar fetchDataSuccess = function fetchDataSuccess(payload) {\n  return {\n    type: \"FETCH_DATA_SUCCESS\",\n    payload: payload // { firstName, lastName }\n\n  };\n};\n\nvar fetchDataFailure = function fetchDataFailure() {\n  return {\n    type: \"FETCH_DATA_FAILURE\"\n  };\n};\n\nexport var fetchData = function fetchData() {\n  return function (dispatch) {\n    // dispatch(setDataLoading(true)); // <-- start loading\n    return database.ref().once('value').then(function (snapshot) {\n      var _snapshot$val = snapshot.val(),\n          firstName = _snapshot$val.firstName,\n          lastName = _snapshot$val.lastName,\n          jobTitle = _snapshot$val.jobTitle,\n          city = _snapshot$val.city;\n\n      var portfolioData = snapshot.val();\n      var _portfolioData$urls = portfolioData.urls,\n          linkedIn = _portfolioData$urls.linkedIn,\n          gitHub = _portfolioData$urls.gitHub;\n      dispatch(fetchDataSuccess({\n        firstName: firstName,\n        lastName: lastName,\n        jobTitle: jobTitle,\n        city: city,\n        linkedIn: linkedIn,\n        gitHub: gitHub\n      }));\n    })[\"catch\"](function (e) {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    }); // .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/nextjs-portfolio-app/actions/fetchHomepageDataAction.js"],"names":["database","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","fetchData","dispatch","ref","once","then","snapshot","val","firstName","lastName","jobTitle","city","portfolioData","urls","linkedIn","gitHub","e","console","error"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAK;AAC/BC,IAAAA,IAAI,EAAE,oBADyB;AAE/BC,IAAAA,OAAO,EAAEF;AAFsB,GAAL;AAAA,CAA9B;;AAKA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAD,OAAO;AAAA,SAAK;AACjCD,IAAAA,IAAI,EAAE,oBAD2B;AAEjCC,IAAAA,OAAO,EAAPA,OAFiC,CAExB;;AAFwB,GAAL;AAAA,CAAhC;;AAKA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AAC5BH,IAAAA,IAAI,EAAE;AADsB,GAAP;AAAA,CAAzB;;AAIA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO,UAACC,QAAD,EAAc;AACjB;AACA,WAAOR,QAAQ,CAACS,GAAT,GACFC,IADE,CACG,OADH,EAEFC,IAFE,CAEG,UAACC,QAAD,EAAc;AAAA,0BACgCA,QAAQ,CAACC,GAAT,EADhC;AAAA,UACRC,SADQ,iBACRA,SADQ;AAAA,UACGC,QADH,iBACGA,QADH;AAAA,UACaC,QADb,iBACaA,QADb;AAAA,UACuBC,IADvB,iBACuBA,IADvB;;AAEhB,UAAMC,aAAa,GAAGN,QAAQ,CAACC,GAAT,EAAtB;AAFgB,gCAGaK,aAAa,CAACC,IAH3B;AAAA,UAGRC,QAHQ,uBAGRA,QAHQ;AAAA,UAGEC,MAHF,uBAGEA,MAHF;AAIhBb,MAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAES,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,QAAQ,EAARA,QAAb;AAAuBC,QAAAA,QAAQ,EAARA,QAAvB;AAAiCC,QAAAA,IAAI,EAAJA,IAAjC;AAAuCG,QAAAA,QAAQ,EAARA,QAAvC;AAAiDC,QAAAA,MAAM,EAANA;AAAjD,OAAD,CAAjB,CAAR;AACH,KAPE,WAQI,UAACC,CAAD,EAAO;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,CAArC;AACAd,MAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACH,KAXE,CAAP,CAFiB,CAcjB;AACH,GAfD;AAgBH,CAjBM","sourcesContent":["import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload, // { firstName, lastName }\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        // dispatch(setDataLoading(true)); // <-- start loading\n        return database.ref()\n            .once('value')\n            .then((snapshot) => {\n                const { firstName, lastName, jobTitle, city } = snapshot.val();\n                const portfolioData = snapshot.val();\n                const { linkedIn, gitHub } = portfolioData.urls;\n                dispatch(fetchDataSuccess({ firstName, lastName, jobTitle, city, linkedIn, gitHub }));\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n        // .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n"]},"metadata":{},"sourceType":"module"}