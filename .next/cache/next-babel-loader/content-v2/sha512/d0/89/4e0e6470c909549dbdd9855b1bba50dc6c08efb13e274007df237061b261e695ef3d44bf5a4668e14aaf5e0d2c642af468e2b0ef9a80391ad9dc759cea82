{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-skills.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, useEffect } from 'react';\nimport useSWR from 'swr';\nimport Layout from \"../components/Layout\";\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport QualificationsComponent from \"../components/QualificationsComponent\";\nimport SkillsList from \"../components/SkillsList\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Skills\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst MySkillsPage = () => {\n  // const dispatch = useDispatch();\n  // const {\n  //     error,\n  //     loading,\n  //     university,\n  //     school,\n  //     searchList,\n  //     text\n  // } = useSelector(state => state.skillsPage);\n  useEffect(() => {\n    const {\n      data,\n      error\n    } = useSWR(database, fetcher);\n\n    const fetcher = () => {\n      return database.ref('skillsPage').once('value').then(snapshot => {\n        const skillsPage = [];\n        snapshot.forEach(child => {\n          skillsPage.push(_objectSpread({}, child.val()));\n        });\n        const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n        const educationArr = education.education.reduce((total, amount) => {\n          return total.concat(amount);\n        }, []);\n        const [university, school] = educationArr;\n        const setLanguages = languages.languages;\n        const setFrameworks = frameworks.libraries_frameworks;\n        const setServices = services.services;\n        const setTools = tools.tools;\n        const setSkillset = skillset.skillset;\n        const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n        const skillsKeys = skillsPage.map(item => {\n          return Object.keys(item);\n        }, []);\n        const [langKey, frameworksKey, servicesKey, toolsKey, skillsetKey] = skillsKeys;\n        const skillsValues = skillsPage.map(item => {\n          return Object.values(item);\n        }, []);\n        const skillsValuesArr = skillsValues.reduce((sum, item) => {\n          return sum.concat(item);\n        }, []);\n        const [languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals] = skillsValuesArr;\n        return {\n          data: {\n            languages,\n            frameworks,\n            services,\n            tools,\n            skillset,\n            university,\n            school,\n            searchList,\n            langKey,\n            frameworksKey,\n            servicesKey,\n            toolsKey,\n            skillsetKey,\n            languagesVals,\n            frameworksVals,\n            servicesVals,\n            toolsVals,\n            skillsetVals\n          }\n        };\n      }).catch(e => {\n        console.error('Error fetching data', e);\n        return {\n          data: {\n            error: true\n          } // will be passed to the page component as props\n\n        };\n      }).finally(() => {\n        return {\n          data: {\n            loading: false\n          } // will be passed to the page component as props\n\n        };\n      });\n    };\n  }, []);\n  const {\n    university,\n    school,\n    searchList\n  } = data;\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const filter = searchList.filter(listItem => listItem.toLowerCase().includes(text.toLocaleLowerCase().trim()));\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"general-section\",\n        id: \"skills\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-section__content\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              className: \"alert__error--fetch\",\n              variant: \"info\",\n              children: \"Error fetching page content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 42\n            }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(QualificationsComponent, {\n              university: university.university,\n              uniStudied: university.studied,\n              uniQualification: university.qualification,\n              other: university.other,\n              school: school.school,\n              schoolStudied: school.studied,\n              schoolQualification: school.qualification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            children: /*#__PURE__*/_jsxDEV(SkillsList, {\n              searchTerm: text,\n              handleChange: handleChange,\n              filter: filter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\nexport { MySkillsPage as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-skills.js"],"names":["useState","useEffect","useSWR","Layout","Container","Col","PageHeader","QualificationsComponent","SkillsList","LoadingSpinner","database","pageTitle","firstWord","secondWord","MySkillsPage","data","error","fetcher","ref","once","then","snapshot","skillsPage","forEach","child","push","val","languages","frameworks","services","tools","skillset","education","educationArr","reduce","total","amount","concat","university","school","setLanguages","setFrameworks","libraries_frameworks","setServices","setTools","setSkillset","searchList","skillsKeys","map","item","Object","keys","langKey","frameworksKey","servicesKey","toolsKey","skillsetKey","skillsValues","values","skillsValuesArr","sum","languagesVals","frameworksVals","servicesVals","toolsVals","skillsetVals","catch","e","console","finally","loading","text","setText","handleChange","target","value","filter","listItem","toLowerCase","includes","toLocaleLowerCase","trim","studied","qualification","other","default"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport useSWR from 'swr';\nimport Layout from \"../components/Layout\";\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport QualificationsComponent from \"../components/QualificationsComponent\";\nimport SkillsList from \"../components/SkillsList\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"My\",\n    secondWord: \"Skills\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst MySkillsPage = () => {\n\n    // const dispatch = useDispatch();\n\n    // const {\n    //     error,\n    //     loading,\n    //     university,\n    //     school,\n    //     searchList,\n    //     text\n    // } = useSelector(state => state.skillsPage);\n\n    useEffect(() => {\n        const { data, error } = useSWR(database, fetcher);\n        const fetcher = () => {\n            return database.ref('skillsPage')\n                .once('value')\n                .then((snapshot) => {\n                    const skillsPage = [];\n\n                    snapshot.forEach((child) => {\n                        skillsPage.push({\n                            ...child.val()\n                        });\n                    });\n                    const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n\n                    const educationArr = education.education.reduce((total, amount) => {\n                        return total.concat(amount);\n                    }, []);\n\n                    const [university, school] = educationArr\n\n                    const setLanguages = languages.languages;\n                    const setFrameworks = frameworks.libraries_frameworks;\n                    const setServices = services.services;\n                    const setTools = tools.tools;\n                    const setSkillset = skillset.skillset;\n\n                    const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n\n                    const skillsKeys = skillsPage.map((item) => {\n                        return Object.keys(item);\n                    }, [])\n\n                    const [langKey, frameworksKey, servicesKey, toolsKey, skillsetKey] = skillsKeys;\n\n                    const skillsValues = skillsPage.map((item) => {\n                        return Object.values(item);\n                    }, []);\n\n                    const skillsValuesArr = skillsValues.reduce((sum, item) => {\n                        return sum.concat(item);\n                    }, []);\n\n                    const [languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals] = skillsValuesArr;\n\n                    return {\n                        data: { languages, frameworks, services, tools, skillset, university, school, searchList, langKey, frameworksKey, servicesKey, toolsKey, skillsetKey, languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals },\n                    }\n\n                })\n                .catch((e) => {\n                    console.error('Error fetching data', e);\n                    return {\n                        data: { error: true }, // will be passed to the page component as props\n                    };\n                })\n                .finally(() => {\n                    return {\n                        data: { loading: false }, // will be passed to the page component as props\n                    };\n                });\n        }\n    }, []);\n\n\n    const { university, school, searchList } = data;\n\n    const [text, setText] = useState('');\n\n    const handleChange = (e) => {\n        setText(e.target.value);\n    };\n\n    const filter = searchList.filter(listItem =>\n        listItem.toLowerCase().includes(text.toLocaleLowerCase().trim())\n    );\n\n\n    return (\n        <Layout content={\n            <Container fluid className=\"p-0\">\n                <section className=\"general-section\" id=\"skills\">\n                    <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                    <div className=\"general-section__content\">\n                        <Col>\n                            {\n                                error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                            }\n                            {loading ? (\n                                <LoadingSpinner />\n                            ) : (\n                                <QualificationsComponent university={university.university} uniStudied={university.studied} uniQualification={university.qualification} other={university.other} school={school.school} schoolStudied={school.studied} schoolQualification={school.qualification} />\n                            )}\n                        </Col>\n                        <Col className=\"mt-5\">\n                            <SkillsList searchTerm={text} handleChange={handleChange} filter={filter} />\n                        </Col>\n\n                    </div>\n                </section>\n            </Container>\n        } />\n    )\n}\n\nexport { MySkillsPage as default };"]},"metadata":{},"sourceType":"module"}