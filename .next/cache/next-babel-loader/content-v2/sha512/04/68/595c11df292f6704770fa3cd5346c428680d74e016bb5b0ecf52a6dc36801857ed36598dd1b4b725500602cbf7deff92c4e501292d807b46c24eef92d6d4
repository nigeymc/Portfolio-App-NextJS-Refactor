{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience/river-island.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment, useEffect } from 'react';\nimport Layout from \"../components/Layout\";\nimport { Alert } from 'react-bootstrap';\nimport SubPageComponent from '../components/SubPageComponent';\nimport PageHeader from \"../components/PageHeader\";\nimport JobProfileComponent from \"../components/JobProfileComponent\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"River\",\n  secondWord: \"Island\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst RiverIsland = props => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"alert__error--fetch\",\n        variant: \"info\",\n        children: \"Error fetching page content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 30\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(SubPageComponent, {\n        subPageHeader: /*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 54\n        }, this),\n        jobComponent: /*#__PURE__*/_jsxDEV(JobProfileComponent, {\n          jobTitle: riverIsland.jobTitle,\n          dates: riverIsland.dates,\n          website: riverIsland.website,\n          location: riverIsland.location,\n          summary: riSummary.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 307\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 130\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  return database.ref('employment').once('value').then(snapshot => {\n    const employment = [];\n    snapshot.forEach(child => {\n      employment.push(_objectSpread({}, child.val()));\n    });\n    const [riverIsland,,,] = employment;\n    const riSummary = riverIsland.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    return {\n      props: {\n        riverIsland,\n        riSummary\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  }); // <-- complete loading\n}\nexport { RiverIsland as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience/river-island.js"],"names":["Fragment","useEffect","Layout","Alert","SubPageComponent","PageHeader","JobProfileComponent","LoadingSpinner","database","pageTitle","firstWord","secondWord","RiverIsland","props","error","loading","riverIsland","jobTitle","dates","website","location","riSummary","map","item","i","getStaticProps","context","ref","once","then","snapshot","employment","forEach","child","push","val","summary","reduce","total","amount","concat","catch","e","console","finally","default"],"mappings":"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","sourcesContent":["import { Fragment, useEffect } from 'react';\nimport Layout from \"../components/Layout\";\nimport { Alert } from 'react-bootstrap';\nimport SubPageComponent from '../components/SubPageComponent';\nimport PageHeader from \"../components/PageHeader\";\nimport JobProfileComponent from \"../components/JobProfileComponent\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"River\",\n    secondWord: \"Island\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst RiverIsland = (props) => {\n    return (\n        <Layout content={\n            <Fragment>\n                {\n                    error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                }\n                {loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <SubPageComponent subPageHeader={<PageHeader firstWord={firstWord} secondWord={secondWord} />} jobComponent={<JobProfileComponent jobTitle={riverIsland.jobTitle} dates={riverIsland.dates} website={riverIsland.website} location={riverIsland.location} summary={riSummary.map((item, i) => <p key={i}>{item}</p>)} />} />\n                )}\n            </Fragment>\n        } />\n    )\n}\n\nexport async function getStaticProps(context) {\n\n    return database.ref('employment')\n        .once('value')\n        .then((snapshot) => {\n            const employment = [];\n\n            snapshot.forEach((child) => {\n                employment.push({\n                    ...child.val()\n                });\n            });\n\n            const [riverIsland, , ,] = employment;\n\n            const riSummary = riverIsland.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            return {\n                props: { riverIsland, riSummary }, // will be passed to the page component as props\n            };\n\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            return {\n                props: { error: true }, // will be passed to the page component as props\n            };\n        })\n        .finally(() => {\n            return {\n                props: { loading: false }, // will be passed to the page component as props\n            };\n        }); // <-- complete loading\n}\n\nexport { RiverIsland as default };"]},"metadata":{},"sourceType":"module"}