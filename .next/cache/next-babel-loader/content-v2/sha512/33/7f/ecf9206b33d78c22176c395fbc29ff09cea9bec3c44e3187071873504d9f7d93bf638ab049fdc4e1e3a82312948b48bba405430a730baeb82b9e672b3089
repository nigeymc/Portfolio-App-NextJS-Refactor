{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience/stella-and-dot.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment } from 'react';\nimport Link from 'next/link';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport Layout from \"../../components/Layout\";\nimport PageHeader from \"../../components/PageHeader\";\nimport JobProfileComponent from \"../../components/JobProfileComponent\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport database from '../../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"Stella\",\n  secondWord: \"&\",\n  thirdWord: \"Dot\"\n};\nconst {\n  firstWord,\n  secondWord,\n  thirdWord\n} = pageTitle;\n\nconst StellaDot = props => {\n  const {\n    stellaDot,\n    sdSummary,\n    error,\n    loading\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"alert__error--fetch\",\n        variant: \"info\",\n        children: \"Error fetching page content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 30\n      }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {\n        fluid: true,\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"general-section general-section\",\n          id: \"experience\",\n          children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n            firstWord: firstWord,\n            secondWord: secondWord\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"general-section__content\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: [/*#__PURE__*/_jsxDEV(JobProfileComponent, {\n                jobTitle: riverIsland.jobTitle,\n                dates: riverIsland.dates,\n                website: riverIsland.website,\n                location: riverIsland.location,\n                summary: riSummary.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 214\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                href: `/my-experience`,\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  className: \"btn btn-primary\",\n                  variant: \"primary\",\n                  children: \"Back to My Experience\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 67\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  return database.ref('employment').once('value').then(snapshot => {\n    const employment = [];\n    snapshot.forEach(child => {\n      employment.push(_objectSpread({}, child.val()));\n    });\n    const [, stellaDot,,] = employment;\n    const sdSummary = riverIsland.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    return {\n      props: {\n        stellaDot,\n        sdSummary\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  }); // <-- complete loading\n}\nexport { StellaDot as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience/stella-and-dot.js"],"names":["Fragment","Link","Container","Col","Alert","Layout","PageHeader","JobProfileComponent","LoadingSpinner","database","pageTitle","firstWord","secondWord","thirdWord","StellaDot","props","stellaDot","sdSummary","error","loading","riverIsland","jobTitle","dates","website","location","riSummary","map","item","i","getStaticProps","context","ref","once","then","snapshot","employment","forEach","child","push","val","summary","reduce","total","amount","concat","catch","e","console","finally","default"],"mappings":"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","sourcesContent":["import { Fragment } from 'react';\nimport Link from 'next/link';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport Layout from \"../../components/Layout\";\nimport PageHeader from \"../../components/PageHeader\";\nimport JobProfileComponent from \"../../components/JobProfileComponent\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport database from '../../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"Stella\",\n    secondWord: \"&\",\n    thirdWord: \"Dot\"\n}\n\nconst { firstWord, secondWord, thirdWord } = pageTitle;\n\nconst StellaDot = (props) => {\n    const { stellaDot, sdSummary, error, loading } = props;\n\n    return (\n        <Layout content={\n            <Fragment>\n                {\n                    error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                }\n                {loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <Container fluid className=\"p-0\">\n                        <section className=\"general-section general-section\" id=\"experience\">\n                            <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                            <div className=\"general-section__content\">\n                                <Col>\n                                    <JobProfileComponent jobTitle={riverIsland.jobTitle} dates={riverIsland.dates} website={riverIsland.website} location={riverIsland.location} summary={riSummary.map((item, i) => <p key={i}>{item}</p>)} />\n                                    <Link href={`/my-experience`}><a className=\"btn btn-primary\" variant=\"primary\">Back to My Experience</a></Link>\n                                </Col>\n                            </div>\n                        </section>\n                    </Container>\n                )}\n            </Fragment>\n        } />\n    )\n}\n\nexport async function getStaticProps(context) {\n\n    return database.ref('employment')\n        .once('value')\n        .then((snapshot) => {\n            const employment = [];\n\n            snapshot.forEach((child) => {\n                employment.push({\n                    ...child.val()\n                });\n            });\n\n            const [, stellaDot, ,] = employment;\n\n            const sdSummary = riverIsland.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            return {\n                props: {\n                    stellaDot,\n                    sdSummary\n                }, // will be passed to the page component as props\n            };\n\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            return {\n                props: { error: true }, // will be passed to the page component as props\n            };\n        })\n        .finally(() => {\n            return {\n                props: { loading: false }, // will be passed to the page component as props\n            };\n        }); // <-- complete loading\n}\n\nexport { StellaDot as default };"]},"metadata":{},"sourceType":"module"}