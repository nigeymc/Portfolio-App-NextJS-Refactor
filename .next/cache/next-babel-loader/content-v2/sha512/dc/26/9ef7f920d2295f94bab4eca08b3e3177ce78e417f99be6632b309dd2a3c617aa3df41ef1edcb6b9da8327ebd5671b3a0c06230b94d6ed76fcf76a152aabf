{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Fragment } from 'react';\nimport Link from 'next/link';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport Layout from \"../../components/Layout\";\nimport PageHeader from \"../../components/PageHeader\";\nimport JobProfileComponent from \"../../components/JobProfileComponent\";\nimport LoadingSpinner from \"../../components/LoadingSpinner\";\nimport database from '../../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"Stella\",\n  secondWord: \"&\",\n  thirdWord: \"Dot\"\n};\nconst {\n  firstWord,\n  secondWord,\n  thirdWord\n} = pageTitle;\n\nconst StellaDot = props => {\n  const {\n    stellaDot,\n    sdSummary,\n    error,\n    loading\n  } = props;\n  return /*#__PURE__*/_jsx(Layout, {\n    content: /*#__PURE__*/_jsxs(Fragment, {\n      children: [error && /*#__PURE__*/_jsx(Alert, {\n        className: \"alert__error--fetch\",\n        variant: \"info\",\n        children: \"Error fetching page content\"\n      }), loading ? /*#__PURE__*/_jsx(LoadingSpinner, {}) : /*#__PURE__*/_jsx(Container, {\n        fluid: true,\n        className: \"p-0\",\n        children: /*#__PURE__*/_jsxs(\"section\", {\n          className: \"general-section general-section\",\n          id: \"experience\",\n          children: [/*#__PURE__*/_jsx(PageHeader, {\n            firstWord: firstWord,\n            secondWord: secondWord\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"general-section__content\",\n            children: /*#__PURE__*/_jsxs(Col, {\n              children: [/*#__PURE__*/_jsx(JobProfileComponent, {\n                jobTitle: stellaDot.jobTitle,\n                dates: stellaDot.dates,\n                website: stellaDot.website,\n                location: stellaDot.location,\n                summary: sdSummary.map((item, i) => /*#__PURE__*/_jsx(\"p\", {\n                  children: item\n                }, i))\n              }), /*#__PURE__*/_jsx(Link, {\n                href: `/my-experience`,\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  className: \"btn btn-primary\",\n                  variant: \"primary\",\n                  children: \"Back to My Experience\"\n                })\n              })]\n            })\n          })]\n        })\n      })]\n    })\n  });\n};\n\nexport async function getStaticProps(context) {\n  return database.ref('employment').once('value').then(snapshot => {\n    const employment = [];\n    snapshot.forEach(child => {\n      employment.push(_objectSpread({}, child.val()));\n    });\n    const [, stellaDot,,] = employment;\n    const sdSummary = stellaDot.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    return {\n      props: {\n        stellaDot,\n        sdSummary\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  }); // <-- complete loading\n}\nexport { StellaDot as default };","map":null,"metadata":{},"sourceType":"module"}