{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nconst GithubProjects = props => {\n  const dispatch = useDispatch();\n  const {\n    error,\n    loading,\n    expensify,\n    portfolio,\n    hooks,\n    next\n  } = useSelector(state => state.githubData);\n  useEffect(() => {\n    dispatch(fetchData());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert__error--fetch\",\n      variant: \"info\",\n      children: \"Error fetching page content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.portfolioNextThumbnail,\n        title: next.name.toString().replace(\"-\", \" \").replace(\"-\", \" \").replace(\"-\", \" \"),\n        description: next.description,\n        pageUrl: next.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.portfolioThumbnail,\n        title: portfolio.name.toString().replace(\"-\", \" \"),\n        description: portfolio.description,\n        pageUrl: portfolio.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.expensifyThumbnail,\n        title: expensify.name.toString().replace(\"-\", \" \"),\n        description: expensify.description,\n        pageUrl: expensify.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.newFeaturesThumbnail,\n        title: hooks.name.toString().replace(\"-\", \" \").replace(\"-\", \" \"),\n        description: hooks.description,\n        pageUrl: hooks.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\nexport { GithubProjects as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js"],"names":["React","Fragment","useEffect","Alert","LoadingSpinner","ProjectCard","useSelector","useDispatch","fetchData","GithubProjects","props","dispatch","error","loading","expensify","portfolio","hooks","next","state","githubData","portfolioNextThumbnail","name","toString","replace","description","url","portfolioThumbnail","expensifyThumbnail","newFeaturesThumbnail","default"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kCAA1B;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAE9B,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM;AACFK,IAAAA,KADE;AAEFC,IAAAA,OAFE;AAGFC,IAAAA,SAHE;AAIFC,IAAAA,SAJE;AAKFC,IAAAA,KALE;AAMFC,IAAAA;AANE,MAOFX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,UAAhB,CAPf;AASAjB,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACH,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,eAEQC,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjB,EAKQC,OAAO,gBACH,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YADG,gBAGH,QAAC,QAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEH,KAAK,CAACU,sBAA9B;AAAsD,QAAA,KAAK,EAAEH,IAAI,CAACI,IAAL,CAAUC,QAAV,GAAqBC,OAArB,CAA6B,GAA7B,EAAkC,GAAlC,EAAuCA,OAAvC,CAA+C,GAA/C,EAAoD,GAApD,EAAyDA,OAAzD,CAAiE,GAAjE,EAAsE,GAAtE,CAA7D;AAAyI,QAAA,WAAW,EAAEN,IAAI,CAACO,WAA3J;AAAwK,QAAA,OAAO,EAAEP,IAAI,CAACQ;AAAtL;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEf,KAAK,CAACgB,kBAA9B;AAAkD,QAAA,KAAK,EAAEX,SAAS,CAACM,IAAV,CAAeC,QAAf,GAA0BC,OAA1B,CAAkC,GAAlC,EAAuC,GAAvC,CAAzD;AAAsG,QAAA,WAAW,EAAER,SAAS,CAACS,WAA7H;AAA0I,QAAA,OAAO,EAAET,SAAS,CAACU;AAA7J;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEf,KAAK,CAACiB,kBAA9B;AAAkD,QAAA,KAAK,EAAEb,SAAS,CAACO,IAAV,CAAeC,QAAf,GAA0BC,OAA1B,CAAkC,GAAlC,EAAuC,GAAvC,CAAzD;AAAsG,QAAA,WAAW,EAAET,SAAS,CAACU,WAA7H;AAA0I,QAAA,OAAO,EAAEV,SAAS,CAACW;AAA7J;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEf,KAAK,CAACkB,oBAA9B;AAAoD,QAAA,KAAK,EAAEZ,KAAK,CAACK,IAAN,CAAWC,QAAX,GAAsBC,OAAtB,CAA8B,GAA9B,EAAmC,GAAnC,EAAwCA,OAAxC,CAAgD,GAAhD,EAAqD,GAArD,CAA3D;AAAsH,QAAA,WAAW,EAAEP,KAAK,CAACQ,WAAzI;AAAsJ,QAAA,OAAO,EAAER,KAAK,CAACS;AAArK;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CApCD;;AAsCA,SAAShB,cAAc,IAAIoB,OAA3B","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nconst GithubProjects = (props) => {\n\n    const dispatch = useDispatch();\n\n    const {\n        error,\n        loading,\n        expensify,\n        portfolio,\n        hooks,\n        next\n    } = useSelector(state => state.githubData);\n\n    useEffect(() => {\n        dispatch(fetchData());\n    }, [dispatch]);\n\n    return (\n        <Fragment>\n            {\n                error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n            }\n            {\n                loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <Fragment>\n                        <ProjectCard thumbnail={props.portfolioNextThumbnail} title={next.name.toString().replace(\"-\", \" \").replace(\"-\", \" \").replace(\"-\", \" \")} description={next.description} pageUrl={next.url} />\n                        <ProjectCard thumbnail={props.portfolioThumbnail} title={portfolio.name.toString().replace(\"-\", \" \")} description={portfolio.description} pageUrl={portfolio.url} />\n                        <ProjectCard thumbnail={props.expensifyThumbnail} title={expensify.name.toString().replace(\"-\", \" \")} description={expensify.description} pageUrl={expensify.url} />\n                        <ProjectCard thumbnail={props.newFeaturesThumbnail} title={hooks.name.toString().replace(\"-\", \" \").replace(\"-\", \" \")} description={hooks.description} pageUrl={hooks.url} />\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    )\n}\n\nexport { GithubProjects as default };"]},"metadata":{},"sourceType":"module"}