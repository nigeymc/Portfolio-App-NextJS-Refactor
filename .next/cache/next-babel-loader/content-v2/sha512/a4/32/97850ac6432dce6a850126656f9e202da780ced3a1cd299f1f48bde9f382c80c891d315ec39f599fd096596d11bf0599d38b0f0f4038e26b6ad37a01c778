{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n  type: \"FETCH_DATA_LOADING\",\n  payload: loading\n});\n\nconst fetchDataSuccess = payload => ({\n  type: \"FETCH_DATA_SUCCESS\",\n  payload // { firstName, lastName }\n\n});\n\nconst fetchDataFailure = () => ({\n  type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(setDataLoading(true)); // <-- start loading\n\n    return database.ref('employment').once('value').then(snapshot => {\n      const employment = [];\n      snapshot.forEach(child => {\n        employment.push(_objectSpread({}, child.val()));\n      });\n      const [riverIsland, stellaDot, nap, jet2] = employment;\n      const riSummary = riverIsland.summary.reduce((total, amount) => {\n        return total.concat(amount);\n      }, []);\n      const sdSummary = stellaDot.summary.reduce((total, amount) => {\n        return total.concat(amount);\n      }, []);\n      const napSummary = nap.summary.reduce((total, amount) => {\n        return total.concat(amount);\n      }, []);\n      const jet2Summary = jet2.summary.reduce((total, amount) => {\n        return total.concat(amount);\n      }, []);\n      dispatch(fetchDataSuccess({\n        employment,\n        riverIsland,\n        riSummary,\n        stellaDot,\n        sdSummary,\n        nap,\n        napSummary,\n        jet2,\n        jet2Summary\n      }));\n    }).catch(e => {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    }).finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/nextjs-portfolio-app/actions/fetchExperienceDataAction.js"],"names":["database","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","fetchData","dispatch","ref","once","then","snapshot","employment","forEach","child","push","val","riverIsland","stellaDot","nap","jet2","riSummary","summary","reduce","total","amount","concat","sdSummary","napSummary","jet2Summary","catch","e","console","error","finally"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,KAAK;AAC/BC,EAAAA,IAAI,EAAE,oBADyB;AAE/BC,EAAAA,OAAO,EAAEF;AAFsB,CAAL,CAA9B;;AAKA,MAAMG,gBAAgB,GAAGD,OAAO,KAAK;AACjCD,EAAAA,IAAI,EAAE,oBAD2B;AAEjCC,EAAAA,OAFiC,CAExB;;AAFwB,CAAL,CAAhC;;AAKA,MAAME,gBAAgB,GAAG,OAAO;AAC5BH,EAAAA,IAAI,EAAE;AADsB,CAAP,CAAzB;;AAIA,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR,CADiB,CACe;;AAChC,WAAOD,QAAQ,CAACS,GAAT,CAAa,YAAb,EACFC,IADE,CACG,OADH,EAEFC,IAFE,CAEIC,QAAD,IAAc;AAChB,YAAMC,UAAU,GAAG,EAAnB;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBC,KAAD,IAAW;AACxBF,QAAAA,UAAU,CAACG,IAAX,mBACOD,KAAK,CAACE,GAAN,EADP;AAGH,OAJD;AAMA,YAAM,CAACC,WAAD,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,IAAsCR,UAA5C;AAEA,YAAMS,SAAS,GAAGJ,WAAW,CAACK,OAAZ,CAAoBC,MAApB,CAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC5D,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFiB,EAEf,EAFe,CAAlB;AAIA,YAAME,SAAS,GAAGT,SAAS,CAACI,OAAV,CAAkBC,MAAlB,CAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1D,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFiB,EAEf,EAFe,CAAlB;AAIA,YAAMG,UAAU,GAAGT,GAAG,CAACG,OAAJ,CAAYC,MAAZ,CAAmB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrD,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFkB,EAEhB,EAFgB,CAAnB;AAIA,YAAMI,WAAW,GAAGT,IAAI,CAACE,OAAL,CAAaC,MAAb,CAAoB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACvD,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFmB,EAEjB,EAFiB,CAApB;AAKAlB,MAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAEQ,QAAAA,UAAF;AAAcK,QAAAA,WAAd;AAA2BI,QAAAA,SAA3B;AAAsCH,QAAAA,SAAtC;AAAiDS,QAAAA,SAAjD;AAA4DR,QAAAA,GAA5D;AAAiES,QAAAA,UAAjE;AAA6ER,QAAAA,IAA7E;AAAmFS,QAAAA;AAAnF,OAAD,CAAjB,CAAR;AACH,KA/BE,EAgCFC,KAhCE,CAgCKC,CAAD,IAAO;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,CAArC;AACAxB,MAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACH,KAnCE,EAoCF6B,OApCE,CAoCM,MAAM3B,QAAQ,CAACP,cAAc,CAAC,KAAD,CAAf,CApCpB,CAAP,CAFiB,CAsCoC;AACxD,GAvCD;AAwCH,CAzCM","sourcesContent":["import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload, // { firstName, lastName }\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(setDataLoading(true)); // <-- start loading\n        return database.ref('employment')\n            .once('value')\n            .then((snapshot) => {\n                const employment = [];\n\n                snapshot.forEach((child) => {\n                    employment.push({\n                        ...child.val()\n                    });\n                });\n\n                const [riverIsland, stellaDot, nap, jet2] = employment;\n\n                const riSummary = riverIsland.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const sdSummary = stellaDot.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const napSummary = nap.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const jet2Summary = jet2.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n\n                dispatch(fetchDataSuccess({ employment, riverIsland, riSummary, stellaDot, sdSummary, nap, napSummary, jet2, jet2Summary }));\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n            .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n"]},"metadata":{},"sourceType":"module"}