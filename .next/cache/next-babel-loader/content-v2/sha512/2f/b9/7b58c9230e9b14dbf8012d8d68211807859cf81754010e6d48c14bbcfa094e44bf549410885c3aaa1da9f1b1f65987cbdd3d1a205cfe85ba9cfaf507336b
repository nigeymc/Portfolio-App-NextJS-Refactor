{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nvar GithubProjects = function GithubProjects(props) {\n  _s();\n\n  // const dispatch = useDispatch();\n  // const {\n  //     error,\n  //     loading,\n  //     expensify,\n  //     portfolio,\n  //     hooks\n  // } = useSelector(state => state.githubData);\n  var _useState = useState({}),\n      portfolio = _useState[0],\n      setPortfolio = _useState[1];\n\n  var _useState2 = useState({}),\n      expensify = _useState2[0],\n      setExpensify = _useState2[1];\n\n  var _useState3 = useState({}),\n      hooks = _useState3[0],\n      setHooks = _useState3[1];\n\n  var _useState4 = useState(null),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState(true),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  useEffect(function () {\n    fetch(\"https://api.github.com/users/nigeymc/repos\", {\n      headers: {\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }) //Converting the response to a JSON object\n    .then(function (data) {\n      var repos = Object.entries(data);\n      var arr = repos.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      var filteredReposArr = arr.filter(function (item, key) {\n        if (typeof item !== \"string\") {\n          return item;\n        }\n      }, []);\n\n      var _filteredReposArr = _slicedToArray(filteredReposArr, 6),\n          endNav = _filteredReposArr[1],\n          expensify = _filteredReposArr[2],\n          portfolio = _filteredReposArr[3],\n          hooks = _filteredReposArr[5];\n\n      setPortfolio({\n        portfolio: portfolio\n      });\n      setExpensify({\n        expensify: expensify\n      });\n      setHooks({\n        hooks: hooks\n      });\n    })[\"catch\"](function (e) {\n      console.error('Error fetching data', e);\n      setError(true); // will be passed to the page component as props\n    })[\"finally\"](function () {\n      setLoading(false); // will be passed to the page component as props\n    }); // <-- complete loading\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n      thumbnail: props.portfolioThumbnail,\n      title: portfolio.name,\n      description: portfolio.description,\n      pageUrl: portfolio.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      thumbnail: props.expensifyThumbnail,\n      title: expensify.name,\n      description: expensify.description,\n      pageUrl: expensify.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n      thumbnail: props.newFeaturesThumbnail,\n      title: hooks.name,\n      description: hooks.description,\n      pageUrl: hooks.url\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GithubProjects, \"Jh6v2NDyaR3ztpNrZFRSU9xZbws=\");\n\n_c = GithubProjects;\nexport { GithubProjects as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProjects\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js"],"names":["React","Fragment","useState","useEffect","Alert","LoadingSpinner","ProjectCard","useSelector","useDispatch","fetchData","GithubProjects","props","portfolio","setPortfolio","expensify","setExpensify","hooks","setHooks","error","setError","loading","setLoading","fetch","headers","then","response","json","data","repos","Object","entries","arr","reduce","total","amount","concat","filteredReposArr","filter","item","key","endNav","e","console","portfolioThumbnail","name","description","url","expensifyThumbnail","newFeaturesThumbnail","default"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nconst GithubProjects = (props) => {\n\n    // const dispatch = useDispatch();\n\n    // const {\n    //     error,\n    //     loading,\n    //     expensify,\n    //     portfolio,\n    //     hooks\n    // } = useSelector(state => state.githubData);\n\n    const [portfolio, setPortfolio] = useState({});\n    const [expensify, setExpensify] = useState({});\n    const [hooks, setHooks] = useState({});\n    const [error, setError] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetch(\"https://api.github.com/users/nigeymc/repos\", {\n            headers: {\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        })\n            .then(response => response.json()) //Converting the response to a JSON object\n            .then(data => {\n\n                const repos = Object.entries(data);\n\n                const arr = repos.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const filteredReposArr = arr.filter((item, key) => {\n                    if (typeof item !== \"string\") {\n                        return item;\n                    }\n                }, []);\n\n                const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n\n                setPortfolio({ portfolio });\n                setExpensify({ expensify });\n                setHooks({ hooks });\n\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                setError(true); // will be passed to the page component as props\n            })\n            .finally(() => {\n                setLoading(false); // will be passed to the page component as props\n            }); // <-- complete loading\n    }, []);\n\n    return (\n        <Fragment>\n            <ProjectCard thumbnail={props.portfolioThumbnail} title={portfolio.name} description={portfolio.description} pageUrl={portfolio.url} />\n            <ProjectCard thumbnail={props.expensifyThumbnail} title={expensify.name} description={expensify.description} pageUrl={expensify.url} />\n            <ProjectCard thumbnail={props.newFeaturesThumbnail} title={hooks.name} description={hooks.description} pageUrl={hooks.url} />\n        </Fragment>\n    )\n}\n\nexport { GithubProjects as default };"]},"metadata":{},"sourceType":"module"}