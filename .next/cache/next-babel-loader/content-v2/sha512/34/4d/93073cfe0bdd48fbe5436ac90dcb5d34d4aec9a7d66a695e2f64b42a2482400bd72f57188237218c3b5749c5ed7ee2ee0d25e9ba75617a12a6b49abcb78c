{"ast":null,"code":"import _regeneratorRuntime from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nvar GithubProjects = function GithubProjects(props) {\n  _s();\n\n  // const dispatch = useDispatch();\n  // const {\n  //     error,\n  //     loading,\n  //     expensify,\n  //     portfolio,\n  //     hooks\n  // } = useSelector(state => state.githubData);\n  var _useState = useState({}),\n      portfolio = _useState[0],\n      setPortfolio = _useState[1];\n\n  var _useState2 = useState({}),\n      expensify = _useState2[0],\n      setExpensify = _useState2[1];\n\n  var _useState3 = useState({}),\n      hooks = _useState3[0],\n      setHooks = _useState3[1];\n\n  var _useState4 = useState(null),\n      hasError = _useState4[0],\n      setErrors = _useState4[1];\n\n  var _useState5 = useState(true),\n      loading = _useState5[0],\n      setLoading = _useState5[1];\n\n  function fetchData() {\n    return _fetchData.apply(this, arguments);\n  }\n\n  function _fetchData() {\n    _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"https://api.github.com/users/nigeymc/repos\", {\n                headers: {\n                  'Accept': 'application/vnd.github.v3+json'\n                }\n              });\n\n            case 2:\n              res = _context.sent;\n              res.json().then(function (data) {\n                var repos = Object.entries(data);\n                var arr = repos.reduce(function (total, amount) {\n                  return total.concat(amount);\n                }, []);\n                var filteredReposArr = arr.filter(function (item, key) {\n                  if (typeof item !== \"string\") {\n                    return item;\n                  }\n                }, []);\n\n                var _filteredReposArr = _slicedToArray(filteredReposArr, 6),\n                    endNav = _filteredReposArr[1],\n                    expensify = _filteredReposArr[2],\n                    portfolio = _filteredReposArr[3],\n                    hooks = _filteredReposArr[5];\n\n                setPortfolio({\n                  portfolio: portfolio\n                });\n                setExpensify({\n                  expensify: expensify\n                });\n                setHooks({\n                  hooks: hooks\n                });\n              })[\"catch\"](function (err) {\n                return setErrors(err);\n              })[\"finally\"](function (loading) {\n                return setLoading(false);\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _fetchData.apply(this, arguments);\n  }\n\n  useEffect(function () {\n    // fetch(\"https://api.github.com/users/nigeymc/repos\", {\n    //     headers: {\n    //         'Accept': 'application/vnd.github.v3+json'\n    //     }\n    // })\n    //     .then(res => res.json()) //Converting the response to a JSON object\n    //     .then(data => {\n    //         const repos = Object.entries(data);\n    //         const arr = repos.reduce((total, amount) => {\n    //             return total.concat(amount);\n    //         }, []);\n    //         const filteredReposArr = arr.filter((item, key) => {\n    //             if (typeof item !== \"string\") {\n    //                 return item;\n    //             }\n    //         }, []);\n    //         const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n    //         setPortfolio({ portfolio });\n    //         setExpensify({ expensify });\n    //         setHooks({ hooks });\n    //     })\n    //     .catch((e) => {\n    //         console.error('Error fetching data', e);\n    //         setError(true); // will be passed to the page component as props\n    //     })\n    //     .finally(() => {\n    //         setLoading(false); // will be passed to the page component as props\n    //     }); // <-- complete loading\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [hasError && /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert__error--fetch\",\n      variant: \"info\",\n      children: \"Error fetching page content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }, _this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }, _this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.portfolioThumbnail,\n        title: portfolio.name,\n        description: portfolio.description,\n        pageUrl: portfolio.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.expensifyThumbnail,\n        title: expensify.name,\n        description: expensify.description,\n        pageUrl: expensify.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.newFeaturesThumbnail,\n        title: hooks.name,\n        description: hooks.description,\n        pageUrl: hooks.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GithubProjects, \"u783gYAUoIivHK3z+V+Fth92azM=\");\n\n_c = GithubProjects;\nexport { GithubProjects as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProjects\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js"],"names":["React","Fragment","useState","useEffect","Alert","LoadingSpinner","ProjectCard","useSelector","useDispatch","fetchData","GithubProjects","props","portfolio","setPortfolio","expensify","setExpensify","hooks","setHooks","hasError","setErrors","loading","setLoading","fetch","headers","res","json","then","data","repos","Object","entries","arr","reduce","total","amount","concat","filteredReposArr","filter","item","key","endNav","err","portfolioThumbnail","name","description","url","expensifyThumbnail","newFeaturesThumbnail","default"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nconst GithubProjects = (props) => {\n\n    // const dispatch = useDispatch();\n\n    // const {\n    //     error,\n    //     loading,\n    //     expensify,\n    //     portfolio,\n    //     hooks\n    // } = useSelector(state => state.githubData);\n\n    const [portfolio, setPortfolio] = useState({});\n    const [expensify, setExpensify] = useState({});\n    const [hooks, setHooks] = useState({});\n    const [hasError, setErrors] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    async function fetchData() {\n        const res = await fetch(\"https://api.github.com/users/nigeymc/repos\", {\n            headers: {\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        });\n        res\n            .json()\n            .then(data => {\n\n                const repos = Object.entries(data);\n\n                const arr = repos.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const filteredReposArr = arr.filter((item, key) => {\n                    if (typeof item !== \"string\") {\n                        return item;\n                    }\n                }, []);\n\n                const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n\n                setPortfolio({ portfolio });\n                setExpensify({ expensify });\n                setHooks({ hooks });\n\n            })\n            .catch(err => setErrors(err))\n            .finally(loading => setLoading(false));\n    }\n\n    useEffect(() => {\n        // fetch(\"https://api.github.com/users/nigeymc/repos\", {\n        //     headers: {\n        //         'Accept': 'application/vnd.github.v3+json'\n        //     }\n        // })\n        //     .then(res => res.json()) //Converting the response to a JSON object\n        //     .then(data => {\n\n        //         const repos = Object.entries(data);\n\n        //         const arr = repos.reduce((total, amount) => {\n        //             return total.concat(amount);\n        //         }, []);\n\n        //         const filteredReposArr = arr.filter((item, key) => {\n        //             if (typeof item !== \"string\") {\n        //                 return item;\n        //             }\n        //         }, []);\n\n        //         const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n\n        //         setPortfolio({ portfolio });\n        //         setExpensify({ expensify });\n        //         setHooks({ hooks });\n\n        //     })\n        //     .catch((e) => {\n        //         console.error('Error fetching data', e);\n        //         setError(true); // will be passed to the page component as props\n        //     })\n        //     .finally(() => {\n        //         setLoading(false); // will be passed to the page component as props\n        //     }); // <-- complete loading\n\n        fetchData();\n    }, []);\n\n    return (\n        <Fragment>\n            {\n                hasError && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n            }\n            {\n                loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <Fragment>\n                        <ProjectCard thumbnail={props.portfolioThumbnail} title={portfolio.name} description={portfolio.description} pageUrl={portfolio.url} />\n                        <ProjectCard thumbnail={props.expensifyThumbnail} title={expensify.name} description={expensify.description} pageUrl={expensify.url} />\n                        <ProjectCard thumbnail={props.newFeaturesThumbnail} title={hooks.name} description={hooks.description} pageUrl={hooks.url} />\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    )\n}\n\nexport { GithubProjects as default };"]},"metadata":{},"sourceType":"module"}