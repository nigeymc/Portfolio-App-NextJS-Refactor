{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-projects.js\";\nimport Layout from \"../components/Layout\";\nimport { Fragment } from 'react';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport GithubProjects from \"../components/GithubProjectsComponent\";\nimport ProjectCard from \"../components/NonGithubProjectCard\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Projects\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\nexport const MyProjectsPage = props => {\n  const {\n    error,\n    loading,\n    portfolioThumbnail,\n    expensifyThumbnail,\n    newFeaturesThumbnail,\n    nonGithubProjects\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"general-section\",\n        id: \"projects\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-section__content\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some of my personal projects.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: /*#__PURE__*/_jsxDEV(GithubProjects, {\n                portfolioThumbnail: portfolioThumbnail,\n                expensifyThumbnail: expensifyThumbnail,\n                newFeaturesThumbnail: newFeaturesThumbnail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"River Island\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Examples of some of the work I did whilst working at River Island for RI Tech. As the code is part of a private repo, below are some screenshots instead. Working examples of some of these features can be found at \", /*#__PURE__*/_jsxDEV(\"a\", {\n                title: \"The River Island website\",\n                href: \"https://www.riverisland.com/\",\n                target: \"_blank\",\n                children: \"riverisland.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 245\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n                className: \"alert__error--fetch\",\n                variant: \"info\",\n                children: \"Error fetching page content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 46\n              }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 37\n              }, this) : nonGithubProjects && nonGithubProjects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n                thumbnail: project.thumbnail,\n                title: project.title,\n                category: project.category,\n                description: project.summary\n              }, project.title.toLowerCase().replace(\" \", \"-\"), false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}; // export async function getStaticProps(context) {\n//     return database.ref()\n//         .once('value')\n//         .then((snapshot) => {\n//             const data = snapshot.val();\n//             const githubProjects = data.githubProjects;\n//             const [githubThumbnails] = githubProjects;\n//             const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail] = githubThumbnails.thumbnails\n//             const nonGithubProjects = data.nonGithubProjects;\n//             return {\n//                 props: { portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects }, // will be passed to the page component as props\n//             };\n//         })\n//         .catch((e) => {\n//             console.error('Error fetching data', e);\n//             return {\n//                 props: { error: true }, // will be passed to the page component as props\n//             };\n//         })\n//         .finally(() => {\n//             return {\n//                 props: { loading: false }, // will be passed to the page component as props\n//             };\n//         }); // <-- complete loading\n// }\n\nexport async function getStaticProps(context) {\n  return fetch(\"https://api.github.com/users/nigeymc/repos\", {\n    headers: {\n      'Accept': 'application/vnd.github.v3+json'\n    }\n  }).then(response => response.json()) //Converting the response to a JSON object\n  .then(data => {\n    const repos = Object.entries(data);\n    const arr = repos.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    const filteredReposArr = arr.filter((item, key) => {\n      if (typeof item !== \"string\") {\n        return item;\n      }\n    }, []);\n    const [, endNav, expensify, portfolio,, hooks] = filteredReposArr;\n    return {\n      props: {\n        filteredReposArr,\n        endNav,\n        expensify,\n        portfolio,\n        hooks\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  });\n}","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-projects.js"],"names":["Layout","Fragment","Container","Col","Alert","PageHeader","LoadingSpinner","GithubProjects","ProjectCard","database","pageTitle","firstWord","secondWord","MyProjectsPage","props","error","loading","portfolioThumbnail","expensifyThumbnail","newFeaturesThumbnail","nonGithubProjects","map","project","thumbnail","title","category","summary","toLowerCase","replace","getStaticProps","context","fetch","headers","then","response","json","data","repos","Object","entries","arr","reduce","total","amount","concat","filteredReposArr","filter","item","key","endNav","expensify","portfolio","hooks","catch","e","console","finally"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport { Fragment } from 'react';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport GithubProjects from \"../components/GithubProjectsComponent\";\nimport ProjectCard from \"../components/NonGithubProjectCard\";\nimport database from '../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"My\",\n    secondWord: \"Projects\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nexport const MyProjectsPage = (props) => {\n    const { error, loading, portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects } = props;\n\n    return (\n        <Layout content={\n            <Container fluid className=\"p-0\">\n                <section className=\"general-section\" id=\"projects\">\n                    <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                    <div className=\"general-section__content\">\n                        <Col>\n                            <h3>Code</h3>\n                            <p>Some of my personal projects.</p>\n                            <div className=\"cards\">\n                                <GithubProjects portfolioThumbnail={portfolioThumbnail} expensifyThumbnail={expensifyThumbnail} newFeaturesThumbnail={newFeaturesThumbnail} />\n                            </div>\n                        </Col>\n                        <Col className=\"mt-5\">\n                            <h3>River Island</h3>\n                            <p>Examples of some of the work I did whilst working at River Island for RI Tech. As the code is part of a private repo, below are some screenshots instead. Working examples of some of these features can be found at <a title=\"The River Island website\" href=\"https://www.riverisland.com/\" target=\"_blank\">riverisland.com</a> </p>\n                            <div className=\"cards\">\n                                {\n                                    error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                                }\n                                {loading ? (\n                                    <LoadingSpinner />\n                                ) : (\n                                    nonGithubProjects && nonGithubProjects.map((project) => (\n                                        <ProjectCard key={project.title.toLowerCase().replace(\" \", \"-\")} thumbnail={project.thumbnail} title={project.title} category={project.category} description={project.summary} />\n\n                                    ))\n                                )}\n                            </div>\n                        </Col>\n                    </div>\n                </section>\n            </Container>\n        } />\n    )\n}\n\n// export async function getStaticProps(context) {\n\n//     return database.ref()\n//         .once('value')\n//         .then((snapshot) => {\n//             const data = snapshot.val();\n//             const githubProjects = data.githubProjects;\n//             const [githubThumbnails] = githubProjects;\n//             const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail] = githubThumbnails.thumbnails\n//             const nonGithubProjects = data.nonGithubProjects;\n//             return {\n//                 props: { portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects }, // will be passed to the page component as props\n//             };\n//         })\n//         .catch((e) => {\n//             console.error('Error fetching data', e);\n//             return {\n//                 props: { error: true }, // will be passed to the page component as props\n//             };\n//         })\n//         .finally(() => {\n//             return {\n//                 props: { loading: false }, // will be passed to the page component as props\n//             };\n//         }); // <-- complete loading\n// }\n\n\nexport async function getStaticProps(context) {\n    return fetch(\"https://api.github.com/users/nigeymc/repos\", {\n        headers: {\n            'Accept': 'application/vnd.github.v3+json'\n        }\n    })\n        .then(response => response.json()) //Converting the response to a JSON object\n        .then(data => {\n\n            const repos = Object.entries(data);\n\n            const arr = repos.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            const filteredReposArr = arr.filter((item, key) => {\n                if (typeof item !== \"string\") {\n                    return item;\n                }\n            }, []);\n\n            const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n\n            return {\n                props: { filteredReposArr, endNav, expensify, portfolio, hooks }, // will be passed to the page component as props\n            };\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            return {\n                props: { error: true }, // will be passed to the page component as props\n            };\n        })\n        .finally(() => {\n            return {\n                props: { loading: false }, // will be passed to the page component as props\n            };\n        })\n}\n"]},"metadata":{},"sourceType":"module"}