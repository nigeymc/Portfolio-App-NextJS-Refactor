{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/ContactForm.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useReducer } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport * as emailjs from 'emailjs-com';\nvar initialState = {\n  name: '',\n  email: '',\n  subject: '',\n  message: ''\n};\n\nvar formReducer = function formReducer(state, action) {\n  switch (action.type) {\n    case 'NAME':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        name: action.value\n      });\n\n    case 'EMAIL':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        email: action.value\n      });\n\n    case 'SUBJECT':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        subject: action.value\n      });\n\n    case 'MESSAGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        message: action.value\n      });\n\n    default:\n      throw new Error();\n  }\n};\n\nvar ContactForm = function ContactForm() {\n  _s();\n\n  var _useReducer = useReducer(formReducer, initialState),\n      formState = _useReducer[0],\n      dispatch = _useReducer[1];\n\n  var _useState = useState(false),\n      showFormErr = _useState[0],\n      setShowFormErr = _useState[1];\n\n  var _useState2 = useState({\n    title: '',\n    paragraph: ''\n  }),\n      formSubmitted = _useState2[0],\n      setFormSubmitted = _useState2[1];\n\n  var _useState3 = useState(false),\n      showCaptcha = _useState3[0],\n      setShowCaptcha = _useState3[1];\n\n  var name = formState.name,\n      email = formState.email,\n      subject = formState.subject,\n      message = formState.message;\n\n  var submitFormAndShowCaptcha = function submitFormAndShowCaptcha(e) {\n    e.preventDefault();\n    setShowCaptcha(true);\n  };\n\n  var sendEmail = function sendEmail(captchaValue) {\n    if (name === '' || email === '' || subject === '' || message === '') {\n      setShowFormErr(true);\n      return;\n    }\n\n    var params = {\n      from_name: email,\n      to_name: 'Niall',\n      subject: subject,\n      message: message,\n      'g-recaptcha-response': captchaValue\n    };\n    setFormSubmitted({\n      title: 'Sending message...',\n      paragraph: ''\n    });\n    emailjs.send('service_my3snd5', 'template_4rj8let', params, 'user_gn7hNUi1KB9jeyD2T016F').then(function (_ref) {\n      var status = _ref.status;\n\n      if (status === 200) {\n        setFormSubmitted({\n          title: 'Your message has been sent',\n          paragraph: \"I'll get back to you as soon as possible\"\n        });\n      } else {\n        setFormSubmitted({\n          title: \"There was a problem sending your email', paragraph: 'Please try again later or email me directly at mckenna.niall@gmail.com or reach out on LinkedIn\"\n        });\n      }\n    }, function (err) {\n      // eslint-disable-next-line no-console\n      console.log(err);\n      setFormSubmitted({\n        title: 'Error sending message',\n        paragraph: 'Please try again later or email me directly at mckenna.niall@gmail.com or reach out on LinkedIn'\n      });\n    });\n  };\n\n  return formSubmitted.title === '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !showCaptcha ? /*#__PURE__*/_jsxDEV(Form, {\n      id: \"contact-form\",\n      onSubmit: submitFormAndShowCaptcha,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          name: \"name\",\n          className: \"form-control\",\n          placeholder: \"Name\",\n          onChange: function onChange(e) {\n            return dispatch({\n              type: 'NAME',\n              value: e.target.value\n            });\n          },\n          value: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"email\",\n          name: \"email\",\n          className: \"form-control\",\n          \"aria-describedby\": \"emailHelp\",\n          placeholder: \"Email\",\n          onChange: function onChange(e) {\n            return dispatch({\n              type: 'EMAIL',\n              value: e.target.value\n            });\n          },\n          value: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          type: \"text\",\n          name: \"subject\",\n          className: \"form-control\",\n          placeholder: \"Subject\",\n          onChange: function onChange(e) {\n            return dispatch({\n              type: 'SUBJECT',\n              value: e.target.value\n            });\n          },\n          value: subject\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          required: true,\n          as: \"textarea\",\n          name: \"message\",\n          className: \"form-control\",\n          rows: 5,\n          placeholder: \"Message\",\n          onChange: function onChange(e) {\n            return dispatch({\n              type: 'MESSAGE',\n              value: e.target.value\n            });\n          },\n          value: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"form-group\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }, _this), showFormErr && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please complete all fields to send a message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 37\n      }, _this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Send Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }, _this) : /*#__PURE__*/_jsxDEV(ReCAPTCHA, {\n      sitekey: \"6Lfng2caAAAAAPH3mUIJVnJRqA7maIMWOdsTz0t2\",\n      onChange: sendEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, _this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: formSubmitted.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formSubmitted.paragraph\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 13\n  }, _this);\n};\n\n_s(ContactForm, \"PAvHktvW0ZjmWDBCEPam6d1VTV4=\");\n\n_c = ContactForm;\nexport { ContactForm as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactForm\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/ContactForm.js"],"names":["React","useState","useReducer","Form","Button","ReCAPTCHA","emailjs","initialState","name","email","subject","message","formReducer","state","action","type","value","Error","ContactForm","formState","dispatch","showFormErr","setShowFormErr","title","paragraph","formSubmitted","setFormSubmitted","showCaptcha","setShowCaptcha","submitFormAndShowCaptcha","e","preventDefault","sendEmail","captchaValue","params","from_name","to_name","send","then","status","err","console","log","target","default"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport { Form, Button } from 'react-bootstrap';\nimport ReCAPTCHA from \"react-google-recaptcha\";\nimport * as emailjs from 'emailjs-com';\n\nconst initialState = {\n    name: '',\n    email: '',\n    subject: '',\n    message: '',\n};\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'NAME':\n            return { ...state, name: action.value };\n        case 'EMAIL':\n            return { ...state, email: action.value };\n        case 'SUBJECT':\n            return { ...state, subject: action.value };\n        case 'MESSAGE':\n            return { ...state, message: action.value };\n        default:\n            throw new Error();\n    }\n}\n\nconst ContactForm = () => {\n\n    const [formState, dispatch] = useReducer(formReducer, initialState);\n    const [showFormErr, setShowFormErr] = useState(false);\n    const [formSubmitted, setFormSubmitted] = useState({ title: '', paragraph: '' });\n    const [showCaptcha, setShowCaptcha] = useState(false);\n    const { name, email, subject, message } = formState;\n\n    const submitFormAndShowCaptcha = (e) => {\n        e.preventDefault();\n        setShowCaptcha(true);\n    };\n\n    const sendEmail = (captchaValue) => {\n        if (name === '' || email === '' || subject === '' || message === '') {\n            setShowFormErr(true);\n            return;\n        }\n\n        const params = {\n            from_name: email,\n            to_name: 'Niall',\n            subject: subject,\n            message: message,\n            'g-recaptcha-response': captchaValue,\n        };\n\n        setFormSubmitted({ title: 'Sending message...', paragraph: '' });\n\n        emailjs.send(\n            'service_my3snd5',\n            'template_4rj8let',\n            params,\n            'user_gn7hNUi1KB9jeyD2T016F'\n        )\n            .then(({ status }) => {\n                if (status === 200) {\n                    setFormSubmitted({ title: 'Your message has been sent', paragraph: \"I'll get back to you as soon as possible\" });\n                } else {\n                    setFormSubmitted({ title: \"There was a problem sending your email', paragraph: 'Please try again later or email me directly at mckenna.niall@gmail.com or reach out on LinkedIn\" });\n                }\n            }, (err) => {\n                // eslint-disable-next-line no-console\n                console.log(err);\n                setFormSubmitted({ title: 'Error sending message', paragraph: 'Please try again later or email me directly at mckenna.niall@gmail.com or reach out on LinkedIn' });\n            });\n    };\n\n    return formSubmitted.title === '' ? (\n        <div>\n            {!showCaptcha ? (\n                <Form id=\"contact-form\" onSubmit={submitFormAndShowCaptcha}>\n                    <Form.Group className=\"form-group\">\n                        <Form.Control required type=\"text\" name=\"name\" className=\"form-control\" placeholder=\"Name\"\n                            onChange={(e) => dispatch({ type: 'NAME', value: e.target.value })}\n                            value={name} />\n                    </Form.Group>\n                    <Form.Group className=\"form-group\">\n                        <Form.Control required type=\"email\" name=\"email\" className=\"form-control\" aria-describedby=\"emailHelp\" placeholder=\"Email\"\n                            onChange={(e) => dispatch({ type: 'EMAIL', value: e.target.value })}\n                            value={email} />\n                    </Form.Group>\n                    <Form.Group className=\"form-group\">\n                        <Form.Control required type=\"text\" name=\"subject\" className=\"form-control\" placeholder=\"Subject\"\n                            onChange={(e) => dispatch({ type: 'SUBJECT', value: e.target.value })}\n                            value={subject} />\n                    </Form.Group>\n                    <Form.Group className=\"form-group\">\n                        <Form.Control required as=\"textarea\" name=\"message\" className=\"form-control\" rows={5}\n                            placeholder=\"Message\"\n                            onChange={(e) => dispatch({ type: 'MESSAGE', value: e.target.value })}\n                            value={message} />\n                    </Form.Group>\n                    <Form.Group className=\"form-group\">\n\n                    </Form.Group>\n                    {showFormErr && <p>Please complete all fields to send a message</p>}\n                    <Button variant=\"primary\" type=\"submit\" className=\"btn btn-primary\">Send Message</Button>\n                </Form>\n            ) : (\n                    <ReCAPTCHA\n                        sitekey=\"6Lfng2caAAAAAPH3mUIJVnJRqA7maIMWOdsTz0t2\"\n                        onChange={sendEmail}\n                    />\n                )}\n        </div>\n\n    ) : (\n            <div>\n                <h3>{formSubmitted.title}</h3>\n                <p>{formSubmitted.paragraph}</p>\n            </div>\n        );\n}\n\nexport { ContactForm as default }"]},"metadata":{},"sourceType":"module"}