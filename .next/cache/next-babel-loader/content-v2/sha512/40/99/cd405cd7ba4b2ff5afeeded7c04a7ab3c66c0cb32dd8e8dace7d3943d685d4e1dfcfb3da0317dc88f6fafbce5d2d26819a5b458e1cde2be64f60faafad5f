{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _slicedToArray from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nvar GithubProjects = function GithubProjects(props) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.githubData;\n  }),\n      error = _useSelector.error,\n      loading = _useSelector.loading,\n      expensify = _useSelector.expensify,\n      portfolio = _useSelector.portfolio,\n      hooks = _useSelector.hooks;\n\n  var fetchData = function fetchData() {\n    return fetch(\"https://api.github.com/users/nigeymc/repos\", {\n      headers: {\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }) //Converting the response to a JSON object\n    .then(function (data) {\n      var repos = Object.entries(data);\n      var arr = repos.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      var filteredReposArr = arr.filter(function (item, key) {\n        if (typeof item !== \"string\") {\n          return item;\n        }\n      }, []);\n\n      var _filteredReposArr = _slicedToArray(filteredReposArr, 6),\n          endNav = _filteredReposArr[1],\n          expensify = _filteredReposArr[2],\n          portfolio = _filteredReposArr[3],\n          hooks = _filteredReposArr[5];\n\n      return {\n        props: {\n          filteredReposArr: filteredReposArr,\n          endNav: endNav,\n          expensify: expensify,\n          portfolio: portfolio,\n          hooks: hooks\n        } // will be passed to the page component as props\n\n      };\n    })[\"catch\"](function (e) {\n      console.error('Error fetching data', e);\n      return {\n        props: {\n          error: true\n        } // will be passed to the page component as props\n\n      };\n    })[\"finally\"](function () {\n      return {\n        props: {\n          loading: false\n        } // will be passed to the page component as props\n\n      };\n    }); // <-- complete loading\n  };\n\n  useEffect(function () {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert__error--fetch\",\n      variant: \"info\",\n      children: \"Error fetching page content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 26\n    }, _this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, _this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.portfolioThumbnail,\n        title: portfolio.name,\n        description: portfolio.description,\n        pageUrl: portfolio.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.expensifyThumbnail,\n        title: expensify.name,\n        description: expensify.description,\n        pageUrl: expensify.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.newFeaturesThumbnail,\n        title: hooks.name,\n        description: hooks.description,\n        pageUrl: hooks.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GithubProjects, \"t9Gxd12EdjtGVIgbA1j9GcAJkvs=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GithubProjects;\nexport { GithubProjects as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProjects\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js"],"names":["React","Fragment","useEffect","Alert","LoadingSpinner","ProjectCard","useSelector","useDispatch","fetchData","GithubProjects","props","dispatch","state","githubData","error","loading","expensify","portfolio","hooks","fetch","headers","then","response","json","data","repos","Object","entries","arr","reduce","total","amount","concat","filteredReposArr","filter","item","key","endNav","e","console","portfolioThumbnail","name","description","url","expensifyThumbnail","newFeaturesThumbnail","default"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kCAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAE9B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAF8B,qBAU1BD,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAV;AAAA,GAAN,CAVe;AAAA,MAK1BC,KAL0B,gBAK1BA,KAL0B;AAAA,MAM1BC,OAN0B,gBAM1BA,OAN0B;AAAA,MAO1BC,SAP0B,gBAO1BA,SAP0B;AAAA,MAQ1BC,SAR0B,gBAQ1BA,SAR0B;AAAA,MAS1BC,KAT0B,gBAS1BA,KAT0B;;AAY9B,MAAMV,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpB,WAAOW,KAAK,CAAC,4CAAD,EAA+C;AACvDC,MAAAA,OAAO,EAAE;AACL,kBAAU;AADL;AAD8C,KAA/C,CAAL,CAKFC,IALE,CAKG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KALX,EAKgC;AALhC,KAMFF,IANE,CAMG,UAAAG,IAAI,EAAI;AAEV,UAAMC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAd;AAEA,UAAMI,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxC,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFW,EAET,EAFS,CAAZ;AAIA,UAAME,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC/C,YAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B,iBAAOA,IAAP;AACH;AACJ,OAJwB,EAItB,EAJsB,CAAzB;;AARU,6CAcwCF,gBAdxC;AAAA,UAcDI,MAdC;AAAA,UAcOrB,SAdP;AAAA,UAckBC,SAdlB;AAAA,UAc+BC,KAd/B;;AAgBV,aAAO;AACHR,QAAAA,KAAK,EAAE;AAAEuB,UAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBI,UAAAA,MAAM,EAANA,MAApB;AAA4BrB,UAAAA,SAAS,EAATA,SAA5B;AAAuCC,UAAAA,SAAS,EAATA,SAAvC;AAAkDC,UAAAA,KAAK,EAALA;AAAlD,SADJ,CAC+D;;AAD/D,OAAP;AAIH,KA1BE,WA2BI,UAACoB,CAAD,EAAO;AACVC,MAAAA,OAAO,CAACzB,KAAR,CAAc,qBAAd,EAAqCwB,CAArC;AACA,aAAO;AACH5B,QAAAA,KAAK,EAAE;AAAEI,UAAAA,KAAK,EAAE;AAAT,SADJ,CACqB;;AADrB,OAAP;AAGH,KAhCE,aAiCM,YAAM;AACX,aAAO;AACHJ,QAAAA,KAAK,EAAE;AAAEK,UAAAA,OAAO,EAAE;AAAX,SADJ,CACwB;;AADxB,OAAP;AAGH,KArCE,CAAP,CADoB,CAsCZ;AAEX,GAxCD;;AA0CAb,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,eAEQM,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFjB,EAKQC,OAAO,gBACH,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aADG,gBAGH,QAAC,QAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEL,KAAK,CAAC8B,kBAA9B;AAAkD,QAAA,KAAK,EAAEvB,SAAS,CAACwB,IAAnE;AAAyE,QAAA,WAAW,EAAExB,SAAS,CAACyB,WAAhG;AAA6G,QAAA,OAAO,EAAEzB,SAAS,CAAC0B;AAAhI;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEjC,KAAK,CAACkC,kBAA9B;AAAkD,QAAA,KAAK,EAAE5B,SAAS,CAACyB,IAAnE;AAAyE,QAAA,WAAW,EAAEzB,SAAS,CAAC0B,WAAhG;AAA6G,QAAA,OAAO,EAAE1B,SAAS,CAAC2B;AAAhI;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEjC,KAAK,CAACmC,oBAA9B;AAAoD,QAAA,KAAK,EAAE3B,KAAK,CAACuB,IAAjE;AAAuE,QAAA,WAAW,EAAEvB,KAAK,CAACwB,WAA1F;AAAuG,QAAA,OAAO,EAAExB,KAAK,CAACyB;AAAtH;AAAA;AAAA;AAAA;AAAA,eAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,aARZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAkBH,CA5ED;;GAAMlC,c;UAEeF,W,EAQbD,W;;;KAVFG,c;AA8EN,SAASA,cAAc,IAAIqC,OAA3B","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nconst GithubProjects = (props) => {\n\n    const dispatch = useDispatch();\n\n    const {\n        error,\n        loading,\n        expensify,\n        portfolio,\n        hooks\n    } = useSelector(state => state.githubData);\n\n    const fetchData = () => {\n        return fetch(\"https://api.github.com/users/nigeymc/repos\", {\n            headers: {\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        })\n            .then(response => response.json()) //Converting the response to a JSON object\n            .then(data => {\n\n                const repos = Object.entries(data);\n\n                const arr = repos.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const filteredReposArr = arr.filter((item, key) => {\n                    if (typeof item !== \"string\") {\n                        return item;\n                    }\n                }, []);\n\n                const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n\n                return {\n                    props: { filteredReposArr, endNav, expensify, portfolio, hooks }, // will be passed to the page component as props\n                };\n\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                return {\n                    props: { error: true }, // will be passed to the page component as props\n                };\n            })\n            .finally(() => {\n                return {\n                    props: { loading: false }, // will be passed to the page component as props\n                };\n            }); // <-- complete loading\n\n    };\n\n    useEffect(() => {\n        fetchData();\n    }, []);\n\n    return (\n        <Fragment>\n            {\n                error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n            }\n            {\n                loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <Fragment>\n                        <ProjectCard thumbnail={props.portfolioThumbnail} title={portfolio.name} description={portfolio.description} pageUrl={portfolio.url} />\n                        <ProjectCard thumbnail={props.expensifyThumbnail} title={expensify.name} description={expensify.description} pageUrl={expensify.url} />\n                        <ProjectCard thumbnail={props.newFeaturesThumbnail} title={hooks.name} description={hooks.description} pageUrl={hooks.url} />\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    )\n}\n\nexport { GithubProjects as default };"]},"metadata":{},"sourceType":"module"}