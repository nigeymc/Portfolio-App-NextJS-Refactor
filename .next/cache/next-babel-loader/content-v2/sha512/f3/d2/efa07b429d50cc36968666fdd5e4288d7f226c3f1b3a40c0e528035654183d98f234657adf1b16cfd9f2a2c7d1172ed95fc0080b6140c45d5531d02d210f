{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/Link.js\";\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst NavLink = ({\n  href,\n  children\n}) => {\n  const router = useRouter();\n  let className = children.props.className || '';\n  const pathnameParts = router.pathname.split('/');\n\n  if (router.pathname === href || `/${pathnameParts[1]}` === href) {\n    className = `active ${className}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Link, {\n    href: href,\n    children: React.cloneElement(children, {\n      className\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 12\n  }, this);\n};\n\nexport { NavLink as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/Link.js"],"names":["Link","useRouter","NavLink","href","children","router","className","props","pathnameParts","pathname","split","React","cloneElement","default"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAD,KAAwB;AACpC,QAAMC,MAAM,GAAGJ,SAAS,EAAxB;AAEA,MAAIK,SAAS,GAAGF,QAAQ,CAACG,KAAT,CAAeD,SAAf,IAA4B,EAA5C;AACA,QAAME,aAAa,GAAGH,MAAM,CAACI,QAAP,CAAgBC,KAAhB,CAAsB,GAAtB,CAAtB;;AAEA,MAAIL,MAAM,CAACI,QAAP,KAAoBN,IAApB,IAA6B,IAAGK,aAAa,CAAC,CAAD,CAAI,EAArB,KAA2BL,IAA3D,EAAiE;AAC7DG,IAAAA,SAAS,GAAI,UAASA,SAAU,EAAhC;AACH;;AAED,sBAAO,QAAC,IAAD;AAAM,IAAA,IAAI,EAAEH,IAAZ;AAAA,cAAmBQ,KAAK,CAACC,YAAN,CAAmBR,QAAnB,EAA6B;AAAEE,MAAAA;AAAF,KAA7B;AAAnB;AAAA;AAAA;AAAA;AAAA,UAAP;AACH,CAXD;;AAaA,SAASJ,OAAO,IAAIW,OAApB","sourcesContent":["import Link from 'next/link';\nimport { useRouter } from 'next/router';\n\nconst NavLink = ({ href, children }) => {\n    const router = useRouter();\n\n    let className = children.props.className || '';\n    const pathnameParts = router.pathname.split('/');\n\n    if (router.pathname === href || `/${pathnameParts[1]}` === href) {\n        className = `active ${className}`\n    }\n\n    return <Link href={href}>{React.cloneElement(children, { className })}</Link>\n}\n\nexport { NavLink as default };"]},"metadata":{},"sourceType":"module"}