{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport { Container, Col } from 'react-bootstrap';\nimport Layout from \"../components/Layout\";\nimport PageHeader from \"../components/PageHeader\";\nimport ExperienceCard from \"../components/ExperienceCard\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Experience\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst MyExepriencePage = props => {\n  const {\n    loading,\n    error,\n    employment,\n    riverIsland,\n    riSummary,\n    stellaDot,\n    sdSummary,\n    nap,\n    napSummary,\n    jet2,\n    jet2Summary\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"general-section\",\n        id: \"experience\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-section__content\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"2009 - Today\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n                className: \"alert__error--fetch\",\n                variant: \"info\",\n                children: \"Error fetching page content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 28,\n                columnNumber: 46\n              }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 37\n              }, this) : employment.map(company => /*#__PURE__*/_jsxDEV(ExperienceCard, {\n                logo: company.logo,\n                title: company.companyName,\n                dates: company.dates,\n                description: company.description,\n                pageUrl: company.pageUrl\n              }, company.companyName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\nexport async function getStaticProps(context) {\n  return database.ref('employment').once('value').then(snapshot => {\n    const employment = [];\n    snapshot.forEach(child => {\n      employment.push(_objectSpread({}, child.val()));\n    });\n    const [riverIsland, stellaDot, nap, jet2] = employment;\n    const riSummary = riverIsland.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    const sdSummary = stellaDot.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    const napSummary = nap.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    const jet2Summary = jet2.summary.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    return {\n      props: {\n        employment,\n        riverIsland,\n        riSummary,\n        stellaDot,\n        sdSummary,\n        nap,\n        napSummary,\n        jet2,\n        jet2Summary\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  }); // <-- complete loading\n}\nexport { MyExepriencePage as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience.js"],"names":["useEffect","Container","Col","Layout","PageHeader","ExperienceCard","LoadingSpinner","database","pageTitle","firstWord","secondWord","MyExepriencePage","props","loading","error","employment","riverIsland","riSummary","stellaDot","sdSummary","nap","napSummary","jet2","jet2Summary","map","company","logo","companyName","dates","description","pageUrl","getStaticProps","context","ref","once","then","snapshot","forEach","child","push","val","summary","reduce","total","amount","concat","catch","e","console","finally","default"],"mappings":"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","sourcesContent":["import { useEffect } from 'react';\nimport { Container, Col } from 'react-bootstrap';\nimport Layout from \"../components/Layout\";\nimport PageHeader from \"../components/PageHeader\";\nimport ExperienceCard from \"../components/ExperienceCard\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"My\",\n    secondWord: \"Experience\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst MyExepriencePage = (props) => {\n    const { loading, error, employment, riverIsland, riSummary, stellaDot, sdSummary, nap, napSummary, jet2, jet2Summary } = props;\n    return (\n        <Layout content={\n            <Container fluid className=\"p-0\">\n                <section className=\"general-section\" id=\"experience\">\n                    <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                    <div className=\"general-section__content\">\n                        <Col>\n                            <h3>2009 - Today</h3>\n                            <div className=\"cards\">\n                                {\n                                    error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                                }\n                                {loading ? (\n                                    <LoadingSpinner />\n                                ) : (\n\n                                    employment.map((company) => (\n                                        <ExperienceCard key={company.companyName} logo={company.logo} title={company.companyName} dates={company.dates} description={company.description} pageUrl={company.pageUrl} />\n                                    ))\n\n                                )}\n                            </div>\n                        </Col>\n                    </div>\n                </section>\n            </Container>\n        } />\n    )\n}\n\nexport async function getStaticProps(context) {\n\n    return database.ref('employment')\n        .once('value')\n        .then((snapshot) => {\n            const employment = [];\n\n            snapshot.forEach((child) => {\n                employment.push({\n                    ...child.val()\n                });\n            });\n\n            const [riverIsland, stellaDot, nap, jet2] = employment;\n\n            const riSummary = riverIsland.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            const sdSummary = stellaDot.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            const napSummary = nap.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            const jet2Summary = jet2.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            return {\n                props: { employment, riverIsland, riSummary, stellaDot, sdSummary, nap, napSummary, jet2, jet2Summary }, // will be passed to the page component as props\n            };\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            return {\n                props: { error: true }, // will be passed to the page component as props\n            };\n        })\n        .finally(() => {\n            return {\n                props: { loading: false }, // will be passed to the page component as props\n            };\n        }); // <-- complete loading\n}\n\nexport { MyExepriencePage as default };"]},"metadata":{},"sourceType":"module"}