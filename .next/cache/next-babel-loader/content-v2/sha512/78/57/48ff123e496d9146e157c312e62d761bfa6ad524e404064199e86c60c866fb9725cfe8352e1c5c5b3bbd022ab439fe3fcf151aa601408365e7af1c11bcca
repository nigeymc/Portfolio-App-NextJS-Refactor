{"ast":null,"code":"import _slicedToArray from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport database from '../firebase/firebase';\n\nvar setDataLoading = function setDataLoading(loading) {\n  return {\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading\n  };\n};\n\nvar fetchDataSuccess = function fetchDataSuccess(payload) {\n  return {\n    type: \"FETCH_DATA_SUCCESS\",\n    payload: payload // { firstName, lastName }\n\n  };\n};\n\nvar fetchDataFailure = function fetchDataFailure() {\n  return {\n    type: \"FETCH_DATA_FAILURE\"\n  };\n};\n\nexport var fetchData = function fetchData() {\n  return function (dispatch) {\n    dispatch(setDataLoading(true)); // <-- start loading\n\n    return database.ref().once('value').then(function (snapshot) {\n      var portfolioData = snapshot.val();\n      var githubProjects = portfolioData.githubProjects;\n\n      var _githubProjects = _slicedToArray(githubProjects, 1),\n          githubThumbnails = _githubProjects[0];\n\n      var _githubThumbnails$thu = _slicedToArray(githubThumbnails.thumbnails, 3),\n          portfolioThumbnail = _githubThumbnails$thu[0],\n          expensifyThumbnail = _githubThumbnails$thu[1],\n          newFeaturesThumbnail = _githubThumbnails$thu[2];\n\n      var nonGithubProjects = portfolioData.nonGithubProjects;\n      console.log(nonGithubProjects);\n      dispatch(fetchDataSuccess({\n        portfolioThumbnail: portfolioThumbnail,\n        expensifyThumbnail: expensifyThumbnail,\n        newFeaturesThumbnail: newFeaturesThumbnail,\n        nonGithubProjects: nonGithubProjects\n      }));\n    })[\"catch\"](function (e) {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    })[\"finally\"](function () {\n      return dispatch(setDataLoading(false));\n    }); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/actions/fetchProjectsDataAction.js"],"names":["database","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","fetchData","dispatch","ref","once","then","snapshot","portfolioData","val","githubProjects","githubThumbnails","thumbnails","portfolioThumbnail","expensifyThumbnail","newFeaturesThumbnail","nonGithubProjects","console","log","e","error"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAK;AAC/BC,IAAAA,IAAI,EAAE,oBADyB;AAE/BC,IAAAA,OAAO,EAAEF;AAFsB,GAAL;AAAA,CAA9B;;AAKA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAD,OAAO;AAAA,SAAK;AACjCD,IAAAA,IAAI,EAAE,oBAD2B;AAEjCC,IAAAA,OAAO,EAAPA,OAFiC,CAExB;;AAFwB,GAAL;AAAA,CAAhC;;AAKA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AAC5BH,IAAAA,IAAI,EAAE;AADsB,GAAP;AAAA,CAAzB;;AAIA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR,CADiB,CACe;;AAChC,WAAOD,QAAQ,CAACS,GAAT,GACFC,IADE,CACG,OADH,EAEFC,IAFE,CAEG,UAACC,QAAD,EAAc;AAChB,UAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAT,EAAtB;AACA,UAAMC,cAAc,GAAGF,aAAa,CAACE,cAArC;;AAFgB,2CAGWA,cAHX;AAAA,UAGTC,gBAHS;;AAAA,iDAIuDA,gBAAgB,CAACC,UAJxE;AAAA,UAITC,kBAJS;AAAA,UAIWC,kBAJX;AAAA,UAI+BC,oBAJ/B;;AAKhB,UAAMC,iBAAiB,GAAGR,aAAa,CAACQ,iBAAxC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AAEAb,MAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAEa,QAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBC,QAAAA,kBAAkB,EAAlBA,kBAAtB;AAA0CC,QAAAA,oBAAoB,EAApBA,oBAA1C;AAAgEC,QAAAA,iBAAiB,EAAjBA;AAAhE,OAAD,CAAjB,CAAR;AACH,KAXE,WAYI,UAACG,CAAD,EAAO;AACVF,MAAAA,OAAO,CAACG,KAAR,CAAc,qBAAd,EAAqCD,CAArC;AACAhB,MAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACH,KAfE,aAgBM;AAAA,aAAME,QAAQ,CAACP,cAAc,CAAC,KAAD,CAAf,CAAd;AAAA,KAhBN,CAAP,CAFiB,CAkBoC;AACxD,GAnBD;AAoBH,CArBM","sourcesContent":["import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload, // { firstName, lastName }\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(setDataLoading(true)); // <-- start loading\n        return database.ref()\n            .once('value')\n            .then((snapshot) => {\n                const portfolioData = snapshot.val();\n                const githubProjects = portfolioData.githubProjects;\n                const [githubThumbnails] = githubProjects;\n                const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail] = githubThumbnails.thumbnails\n                const nonGithubProjects = portfolioData.nonGithubProjects;\n                console.log(nonGithubProjects);\n\n                dispatch(fetchDataSuccess({ portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects }));\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n            .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n"]},"metadata":{},"sourceType":"module"}