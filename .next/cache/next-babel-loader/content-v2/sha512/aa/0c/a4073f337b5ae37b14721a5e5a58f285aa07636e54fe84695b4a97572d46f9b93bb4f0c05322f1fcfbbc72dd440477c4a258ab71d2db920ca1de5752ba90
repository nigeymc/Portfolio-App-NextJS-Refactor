{"ast":null,"code":"import _defineProperty from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport database from '../firebase/firebase';\n\nvar setDataLoading = function setDataLoading(loading) {\n  return {\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading\n  };\n};\n\nvar fetchDataSuccess = function fetchDataSuccess(payload) {\n  return {\n    type: \"FETCH_DATA_SUCCESS\",\n    payload: payload // { firstName, lastName }\n\n  };\n};\n\nvar fetchDataFailure = function fetchDataFailure() {\n  return {\n    type: \"FETCH_DATA_FAILURE\"\n  };\n};\n\nexport var fetchData = function fetchData() {\n  return function (dispatch) {\n    dispatch(setDataLoading(true)); // <-- start loading\n\n    return database.ref('employment').once('value').then(function (snapshot) {\n      var employment = [];\n      snapshot.forEach(function (child) {\n        employment.push(_objectSpread({}, child.val()));\n      });\n      var riverIsland = employment[0],\n          stellaDot = employment[1],\n          nap = employment[2],\n          jet2 = employment[3];\n      var riSummary = riverIsland.summary.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      var sdSummary = stellaDot.summary.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      var napSummary = nap.summary.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      var jet2Summary = jet2.summary.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      dispatch(fetchDataSuccess({\n        employment: employment,\n        riverIsland: riverIsland,\n        riSummary: riSummary,\n        stellaDot: stellaDot,\n        sdSummary: sdSummary,\n        nap: nap,\n        napSummary: napSummary,\n        jet2: jet2,\n        jet2Summary: jet2Summary\n      }));\n    })[\"catch\"](function (e) {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    })[\"finally\"](function () {\n      return dispatch(setDataLoading(false));\n    }); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/actions/fetchExperienceDataAction.js"],"names":["database","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","fetchData","dispatch","ref","once","then","snapshot","employment","forEach","child","push","val","riverIsland","stellaDot","nap","jet2","riSummary","summary","reduce","total","amount","concat","sdSummary","napSummary","jet2Summary","e","console","error"],"mappings":"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","sourcesContent":["import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload, // { firstName, lastName }\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(setDataLoading(true)); // <-- start loading\n        return database.ref('employment')\n            .once('value')\n            .then((snapshot) => {\n                const employment = [];\n\n                snapshot.forEach((child) => {\n                    employment.push({\n                        ...child.val()\n                    });\n                });\n\n                const [riverIsland, stellaDot, nap, jet2] = employment;\n\n                const riSummary = riverIsland.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const sdSummary = stellaDot.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const napSummary = nap.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const jet2Summary = jet2.summary.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n\n                dispatch(fetchDataSuccess({ employment, riverIsland, riSummary, stellaDot, sdSummary, nap, napSummary, jet2, jet2Summary }));\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n            .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n"]},"metadata":{},"sourceType":"module"}