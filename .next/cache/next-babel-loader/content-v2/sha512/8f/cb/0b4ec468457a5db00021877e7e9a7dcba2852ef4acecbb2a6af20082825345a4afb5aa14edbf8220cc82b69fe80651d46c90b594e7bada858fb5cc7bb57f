{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience/river-island.js\",\n    _this = this;\n\nimport { Fragment } from 'react';\nimport Layout from \"../components/Layout\";\nimport { Alert } from 'react-bootstrap';\nimport SubPageComponent from '../components/SubPageComponent';\nimport PageHeader from \"../components/PageHeader\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nvar pageTitle = {\n  firstWord: \"River\",\n  secondWord: \"Island\"\n};\nvar firstWord = pageTitle.firstWord,\n    secondWord = pageTitle.secondWord;\n\nvar RiverIsland = function RiverIsland(props) {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n        className: \"alert__error--fetch\",\n        variant: \"info\",\n        children: \"Error fetching page content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 30\n      }, _this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, _this) : /*#__PURE__*/_jsxDEV(SubPageComponent, {\n        subPageHeader: /*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 54\n        }, _this),\n        jobComponent: /*#__PURE__*/_jsxDEV(JobProfileComponent, {\n          jobTitle: riverIsland.jobTitle,\n          dates: riverIsland.dates,\n          website: riverIsland.website,\n          location: riverIsland.location,\n          summary: riSummary.map(function (item, i) {\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 307\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 130\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = RiverIsland;\nexport var __N_SSG = true;\nexport { RiverIsland as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"RiverIsland\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-experience/river-island.js"],"names":["Fragment","Layout","Alert","SubPageComponent","PageHeader","LoadingSpinner","pageTitle","firstWord","secondWord","RiverIsland","props","error","loading","riverIsland","jobTitle","dates","website","location","riSummary","map","item","i","default"],"mappings":";;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,OAAOC,cAAP,MAA2B,8BAA3B;AAGA,IAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,OADG;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAlB;IAKQD,S,GAA0BD,S,CAA1BC,S;IAAWC,U,GAAeF,S,CAAfE,U;;AAEnB,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,eACX,QAAC,QAAD;AAAA,iBAEQC,KAAK,iBAAI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAC,qBAAjB;AAAuC,QAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFjB,EAIKC,OAAO,gBACJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,eADI,gBAGJ,QAAC,gBAAD;AAAkB,QAAA,aAAa,eAAE,QAAC,UAAD;AAAY,UAAA,SAAS,EAAEL,SAAvB;AAAkC,UAAA,UAAU,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,iBAAjC;AAA+F,QAAA,YAAY,eAAE,QAAC,mBAAD;AAAqB,UAAA,QAAQ,EAAEK,WAAW,CAACC,QAA3C;AAAqD,UAAA,KAAK,EAAED,WAAW,CAACE,KAAxE;AAA+E,UAAA,OAAO,EAAEF,WAAW,CAACG,OAApG;AAA6G,UAAA,QAAQ,EAAEH,WAAW,CAACI,QAAnI;AAA6I,UAAA,OAAO,EAAEC,SAAS,CAACC,GAAV,CAAc,UAACC,IAAD,EAAOC,CAAP;AAAA,gCAAa;AAAA,wBAAYD;AAAZ,eAAQC,CAAR;AAAA;AAAA;AAAA;AAAA,qBAAb;AAAA,WAAd;AAAtJ;AAAA;AAAA;AAAA;AAAA;AAA7G;AAAA;AAAA;AAAA;AAAA,eAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CAfD;;KAAMZ,W;;AAsDN,SAASA,WAAW,IAAIa,OAAxB","sourcesContent":["import { Fragment } from 'react';\nimport Layout from \"../components/Layout\";\nimport { Alert } from 'react-bootstrap';\nimport SubPageComponent from '../components/SubPageComponent';\nimport PageHeader from \"../components/PageHeader\";\n\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"River\",\n    secondWord: \"Island\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst RiverIsland = (props) => {\n    return (\n        <Layout content={\n            <Fragment>\n                {\n                    error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                }\n                {loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <SubPageComponent subPageHeader={<PageHeader firstWord={firstWord} secondWord={secondWord} />} jobComponent={<JobProfileComponent jobTitle={riverIsland.jobTitle} dates={riverIsland.dates} website={riverIsland.website} location={riverIsland.location} summary={riSummary.map((item, i) => <p key={i}>{item}</p>)} />} />\n                )}\n            </Fragment>\n        } />\n    )\n}\n\nexport async function getStaticProps(context) {\n\n    return database.ref('employment')\n        .once('value')\n        .then((snapshot) => {\n            const employment = [];\n\n            snapshot.forEach((child) => {\n                employment.push({\n                    ...child.val()\n                });\n            });\n\n            const [riverIsland, , ,] = employment;\n\n            const riSummary = riverIsland.summary.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            return {\n                props: { riverIsland, riSummary }, // will be passed to the page component as props\n            };\n\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            return {\n                props: { error: true }, // will be passed to the page component as props\n            };\n        })\n        .finally(() => {\n            return {\n                props: { loading: false }, // will be passed to the page component as props\n            };\n        }); // <-- complete loading\n}\n\nexport { RiverIsland as default };"]},"metadata":{},"sourceType":"module"}