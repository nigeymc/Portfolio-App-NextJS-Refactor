{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nvar GithubProjects = function GithubProjects(props) {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.githubData;\n  }),\n      error = _useSelector.error,\n      loading = _useSelector.loading,\n      expensify = _useSelector.expensify,\n      portfolio = _useSelector.portfolio,\n      hooks = _useSelector.hooks,\n      next = _useSelector.next;\n\n  useEffect(function () {\n    dispatch(fetchData());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n      className: \"alert__error--fetch\",\n      variant: \"info\",\n      children: \"Error fetching page content\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 26\n    }, _this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, _this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.portfolioNextThumbnail,\n        title: next.name.toString('utf8').replace(\"-\", \" \").replace(\"-\", \" \").replace(\"-\", \" \"),\n        description: next.description,\n        pageUrl: next.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.portfolioThumbnail,\n        title: portfolio.name.toString('utf8').replace(\"-\", \" \"),\n        description: portfolio.description,\n        pageUrl: portfolio.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.expensifyThumbnail,\n        title: expensify.name.toString('utf8').replace(\"-\", \" \"),\n        description: expensify.description,\n        pageUrl: expensify.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 25\n      }, _this), /*#__PURE__*/_jsxDEV(ProjectCard, {\n        thumbnail: props.newFeaturesThumbnail,\n        title: hooks.name.toString('utf8').replace(\"-\", \" \").replace(\"-\", \" \"),\n        description: hooks.description,\n        pageUrl: hooks.url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 25\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(GithubProjects, \"AUOq9Y8bI1tF0fF4Fak1tY/e1F8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = GithubProjects;\nexport { GithubProjects as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"GithubProjects\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/components/GithubProjectsComponent.js"],"names":["React","Fragment","useEffect","Alert","LoadingSpinner","ProjectCard","useSelector","useDispatch","fetchData","GithubProjects","props","dispatch","state","githubData","error","loading","expensify","portfolio","hooks","next","portfolioNextThumbnail","name","toString","replace","description","url","portfolioThumbnail","expensifyThumbnail","newFeaturesThumbnail","default"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,KAAT,QAAsB,iBAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kCAA1B;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAAA;;AAE9B,MAAMC,QAAQ,GAAGJ,WAAW,EAA5B;;AAF8B,qBAW1BD,WAAW,CAAC,UAAAM,KAAK;AAAA,WAAIA,KAAK,CAACC,UAAV;AAAA,GAAN,CAXe;AAAA,MAK1BC,KAL0B,gBAK1BA,KAL0B;AAAA,MAM1BC,OAN0B,gBAM1BA,OAN0B;AAAA,MAO1BC,SAP0B,gBAO1BA,SAP0B;AAAA,MAQ1BC,SAR0B,gBAQ1BA,SAR0B;AAAA,MAS1BC,KAT0B,gBAS1BA,KAT0B;AAAA,MAU1BC,IAV0B,gBAU1BA,IAV0B;;AAa9BjB,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACH,GAFQ,EAEN,CAACG,QAAD,CAFM,CAAT;AAIA,sBACI,QAAC,QAAD;AAAA,eAEQG,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,SAAS,EAAC,qBAAjB;AAAuC,MAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFjB,EAKQC,OAAO,gBACH,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,aADG,gBAGH,QAAC,QAAD;AAAA,8BACI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEL,KAAK,CAACU,sBAA9B;AAAsD,QAAA,KAAK,EAAED,IAAI,CAACE,IAAL,CAAUC,QAAV,CAAmB,MAAnB,EAA2BC,OAA3B,CAAmC,GAAnC,EAAwC,GAAxC,EAA6CA,OAA7C,CAAqD,GAArD,EAA0D,GAA1D,EAA+DA,OAA/D,CAAuE,GAAvE,EAA4E,GAA5E,CAA7D;AAA+I,QAAA,WAAW,EAAEJ,IAAI,CAACK,WAAjK;AAA8K,QAAA,OAAO,EAAEL,IAAI,CAACM;AAA5L;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEf,KAAK,CAACgB,kBAA9B;AAAkD,QAAA,KAAK,EAAET,SAAS,CAACI,IAAV,CAAeC,QAAf,CAAwB,MAAxB,EAAgCC,OAAhC,CAAwC,GAAxC,EAA6C,GAA7C,CAAzD;AAA4G,QAAA,WAAW,EAAEN,SAAS,CAACO,WAAnI;AAAgJ,QAAA,OAAO,EAAEP,SAAS,CAACQ;AAAnK;AAAA;AAAA;AAAA;AAAA,eAFJ,eAGI,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEf,KAAK,CAACiB,kBAA9B;AAAkD,QAAA,KAAK,EAAEX,SAAS,CAACK,IAAV,CAAeC,QAAf,CAAwB,MAAxB,EAAgCC,OAAhC,CAAwC,GAAxC,EAA6C,GAA7C,CAAzD;AAA4G,QAAA,WAAW,EAAEP,SAAS,CAACQ,WAAnI;AAAgJ,QAAA,OAAO,EAAER,SAAS,CAACS;AAAnK;AAAA;AAAA;AAAA;AAAA,eAHJ,eAII,QAAC,WAAD;AAAa,QAAA,SAAS,EAAEf,KAAK,CAACkB,oBAA9B;AAAoD,QAAA,KAAK,EAAEV,KAAK,CAACG,IAAN,CAAWC,QAAX,CAAoB,MAApB,EAA4BC,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,EAA8CA,OAA9C,CAAsD,GAAtD,EAA2D,GAA3D,CAA3D;AAA4H,QAAA,WAAW,EAAEL,KAAK,CAACM,WAA/I;AAA4J,QAAA,OAAO,EAAEN,KAAK,CAACO;AAA3K;AAAA;AAAA;AAAA;AAAA,eAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,aARZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAmBH,CApCD;;GAAMhB,c;UAEeF,W,EASbD,W;;;KAXFG,c;AAsCN,SAASA,cAAc,IAAIoB,OAA3B","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport ProjectCard from \"./ProjectCard\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchGithubDataAction\";\n\nconst GithubProjects = (props) => {\n\n    const dispatch = useDispatch();\n\n    const {\n        error,\n        loading,\n        expensify,\n        portfolio,\n        hooks,\n        next\n    } = useSelector(state => state.githubData);\n\n    useEffect(() => {\n        dispatch(fetchData());\n    }, [dispatch]);\n\n    return (\n        <Fragment>\n            {\n                error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n            }\n            {\n                loading ? (\n                    <LoadingSpinner />\n                ) : (\n                    <Fragment>\n                        <ProjectCard thumbnail={props.portfolioNextThumbnail} title={next.name.toString('utf8').replace(\"-\", \" \").replace(\"-\", \" \").replace(\"-\", \" \")} description={next.description} pageUrl={next.url} />\n                        <ProjectCard thumbnail={props.portfolioThumbnail} title={portfolio.name.toString('utf8').replace(\"-\", \" \")} description={portfolio.description} pageUrl={portfolio.url} />\n                        <ProjectCard thumbnail={props.expensifyThumbnail} title={expensify.name.toString('utf8').replace(\"-\", \" \")} description={expensify.description} pageUrl={expensify.url} />\n                        <ProjectCard thumbnail={props.newFeaturesThumbnail} title={hooks.name.toString('utf8').replace(\"-\", \" \").replace(\"-\", \" \")} description={hooks.description} pageUrl={hooks.url} />\n                    </Fragment>\n                )\n            }\n        </Fragment>\n    )\n}\n\nexport { GithubProjects as default };"]},"metadata":{},"sourceType":"module"}