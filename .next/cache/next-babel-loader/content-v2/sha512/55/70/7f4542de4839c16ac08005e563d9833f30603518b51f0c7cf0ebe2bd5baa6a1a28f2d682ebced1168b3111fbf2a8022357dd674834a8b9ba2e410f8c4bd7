{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/nextjs-portfolio-app/components/MyExperiencePage.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"./PageHeader\";\nimport ExperienceCard from \"./ExperienceCard\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchExperienceDataAction\";\nvar pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Experience\"\n};\nvar firstWord = pageTitle.firstWord,\n    secondWord = pageTitle.secondWord;\n\nvar MyExperience = function MyExperience() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.experiencePage;\n  }),\n      error = _useSelector.error,\n      loading = _useSelector.loading,\n      employment = _useSelector.employment;\n\n  useEffect(function () {\n    dispatch(fetchData());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"p-0\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"general-section\",\n      id: \"experience\",\n      children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n        firstWord: firstWord,\n        secondWord: secondWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"general-section__content\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"2009 - Today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cards\",\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              className: \"alert__error--fetch\",\n              variant: \"info\",\n              children: \"Error fetching page content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 42\n            }, _this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, _this) : employment.map(function (company) {\n              return /*#__PURE__*/_jsxDEV(ExperienceCard, {\n                logo: company.logo,\n                title: company.companyName,\n                dates: company.dates,\n                description: company.description,\n                pageUrl: company.pageUrl\n              }, company.companyName, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 41\n              }, _this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(MyExperience, \"8eRSepcIINZGzjuK7/53a93nKxA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = MyExperience;\nexport { MyExperience as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"MyExperience\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/nextjs-portfolio-app/components/MyExperiencePage.js"],"names":["useEffect","Container","Col","PageHeader","ExperienceCard","LoadingSpinner","useSelector","useDispatch","fetchData","pageTitle","firstWord","secondWord","MyExperience","dispatch","state","experiencePage","error","loading","employment","map","company","logo","companyName","dates","description","pageUrl","default"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,sCAA1B;AAEA,IAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAlB;IAKQD,S,GAA0BD,S,CAA1BC,S;IAAWC,U,GAAeF,S,CAAfE,U;;AAEnB,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACvB,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADuB,qBAMnBD,WAAW,CAAC,UAAAQ,KAAK;AAAA,WAAIA,KAAK,CAACC,cAAV;AAAA,GAAN,CANQ;AAAA,MAGnBC,KAHmB,gBAGnBA,KAHmB;AAAA,MAInBC,OAJmB,gBAInBA,OAJmB;AAAA,MAKnBC,UALmB,gBAKnBA,UALmB;;AAQvBlB,EAAAA,SAAS,CAAC,YAAM;AACZa,IAAAA,QAAQ,CAACL,SAAS,EAAV,CAAR;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,KAA3B;AAAA,2BACI;AAAS,MAAA,SAAS,EAAC,iBAAnB;AAAqC,MAAA,EAAE,EAAC,YAAxC;AAAA,8BACI,QAAC,UAAD;AAAY,QAAA,SAAS,EAAEE,SAAvB;AAAkC,QAAA,UAAU,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,QAAA,SAAS,EAAC,0BAAf;AAAA,+BACI,QAAC,GAAD;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAK,YAAA,SAAS,EAAC,OAAf;AAAA,uBAEQK,KAAK,iBAAI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAuC,cAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFjB,EAIKC,OAAO,gBACJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,qBADI,GAIAC,UAAU,CAACC,GAAX,CAAe,UAACC,OAAD;AAAA,kCACX,QAAC,cAAD;AAA0C,gBAAA,IAAI,EAAEA,OAAO,CAACC,IAAxD;AAA8D,gBAAA,KAAK,EAAED,OAAO,CAACE,WAA7E;AAA0F,gBAAA,KAAK,EAAEF,OAAO,CAACG,KAAzG;AAAgH,gBAAA,WAAW,EAAEH,OAAO,CAACI,WAArI;AAAkJ,gBAAA,OAAO,EAAEJ,OAAO,CAACK;AAAnK,iBAAqBL,OAAO,CAACE,WAA7B;AAAA;AAAA;AAAA;AAAA,uBADW;AAAA,aAAf,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,eAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AA0BH,CAtCD;;GAAMV,Y;UACeL,W,EAKbD,W;;;KANFM,Y;AAwCN,SAASA,YAAY,IAAIc,OAAzB","sourcesContent":["import { useEffect } from 'react';\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"./PageHeader\";\nimport ExperienceCard from \"./ExperienceCard\";\nimport LoadingSpinner from \"./LoadingSpinner\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { fetchData } from \"../actions/fetchExperienceDataAction\";\n\nconst pageTitle = {\n    firstWord: \"My\",\n    secondWord: \"Experience\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst MyExperience = () => {\n    const dispatch = useDispatch();\n    const {\n        error,\n        loading,\n        employment\n    } = useSelector(state => state.experiencePage);\n\n    useEffect(() => {\n        dispatch(fetchData());\n    }, []);\n\n    return (\n        <Container fluid className=\"p-0\">\n            <section className=\"general-section\" id=\"experience\">\n                <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                <div className=\"general-section__content\">\n                    <Col>\n                        <h3>2009 - Today</h3>\n                        <div className=\"cards\">\n                            {\n                                error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                            }\n                            {loading ? (\n                                <LoadingSpinner />\n                            ) : (\n\n                                    employment.map((company) => (\n                                        <ExperienceCard key={company.companyName} logo={company.logo} title={company.companyName} dates={company.dates} description={company.description} pageUrl={company.pageUrl} />\n                                    ))\n\n                                )}\n                        </div>\n                    </Col>\n                </div>\n            </section>\n        </Container>\n    )\n}\n\nexport { MyExperience as default };"]},"metadata":{},"sourceType":"module"}