{"ast":null,"code":"import _slicedToArray from \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/node_modules/next/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar githubRepos = \"https://api.github.com/users/nigeymc/repos\";\n\nvar setDataLoading = function setDataLoading(loading) {\n  return {\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading\n  };\n};\n\nvar fetchDataSuccess = function fetchDataSuccess(payload) {\n  return {\n    type: \"FETCH_DATA_SUCCESS\",\n    payload: payload\n  };\n};\n\nvar fetchDataFailure = function fetchDataFailure() {\n  return {\n    type: \"FETCH_DATA_FAILURE\"\n  };\n};\n\nexport var fetchData = function fetchData() {\n  return function (dispatch) {\n    dispatch(setDataLoading(true)); // <-- start loading\n\n    return fetch(githubRepos, {\n      headers: {\n        'Accept': 'application/vnd.github.v3+json'\n      }\n    }).then(function (response) {\n      return response.json();\n    }) //Converting the response to a JSON object\n    .then(function (data) {\n      var repos = Object.entries(data);\n      var arr = repos.reduce(function (total, amount) {\n        return total.concat(amount);\n      }, []);\n      var filteredReposArr = arr.filter(function (item, key) {\n        if (typeof item !== \"string\") {\n          return item;\n        }\n      }, []);\n\n      var _filteredReposArr = _slicedToArray(filteredReposArr, 7),\n          endNav = _filteredReposArr[1],\n          expensify = _filteredReposArr[2],\n          portfolio = _filteredReposArr[3],\n          hooks = _filteredReposArr[6];\n\n      dispatch(fetchDataSuccess({\n        filteredReposArr: filteredReposArr,\n        endNav: endNav,\n        expensify: expensify,\n        portfolio: portfolio,\n        hooks: hooks\n      }));\n    })[\"catch\"](function (e) {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    })[\"finally\"](function () {\n      return dispatch(setDataLoading(false));\n    }); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/actions/fetchGithubDataAction.js"],"names":["githubRepos","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","fetchData","dispatch","fetch","headers","then","response","json","data","repos","Object","entries","arr","reduce","total","amount","concat","filteredReposArr","filter","item","key","endNav","expensify","portfolio","hooks","e","console","error"],"mappings":";AAAA,IAAMA,WAAW,GAAG,4CAApB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO;AAAA,SAAK;AAC/BC,IAAAA,IAAI,EAAE,oBADyB;AAE/BC,IAAAA,OAAO,EAAEF;AAFsB,GAAL;AAAA,CAA9B;;AAKA,IAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAD,OAAO;AAAA,SAAK;AACjCD,IAAAA,IAAI,EAAE,oBAD2B;AAEjCC,IAAAA,OAAO,EAAPA;AAFiC,GAAL;AAAA,CAAhC;;AAKA,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAO;AAC5BH,IAAAA,IAAI,EAAE;AADsB,GAAP;AAAA,CAAzB;;AAIA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC3B,SAAO,UAACC,QAAD,EAAc;AACjBA,IAAAA,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR,CADiB,CACe;;AAChC,WAAOQ,KAAK,CAACT,WAAD,EAAc;AACtBU,MAAAA,OAAO,EAAE;AACL,kBAAU;AADL;AADa,KAAd,CAAL,CAKFC,IALE,CAKG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KALX,EAKgC;AALhC,KAMFF,IANE,CAMG,UAAAG,IAAI,EAAI;AAEV,UAAMC,KAAK,GAAGC,MAAM,CAACC,OAAP,CAAeH,IAAf,CAAd;AAEA,UAAMI,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa,UAACC,KAAD,EAAQC,MAAR,EAAmB;AACxC,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFW,EAET,EAFS,CAAZ;AAIA,UAAME,gBAAgB,GAAGL,GAAG,CAACM,MAAJ,CAAW,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC/C,YAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC1B,iBAAOA,IAAP;AACH;AACJ,OAJwB,EAItB,EAJsB,CAAzB;;AARU,6CAc0CF,gBAd1C;AAAA,UAcDI,MAdC;AAAA,UAcOC,SAdP;AAAA,UAckBC,SAdlB;AAAA,UAciCC,KAdjC;;AAgBVtB,MAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAEkB,QAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBI,QAAAA,MAAM,EAANA,MAApB;AAA4BC,QAAAA,SAAS,EAATA,SAA5B;AAAuCC,QAAAA,SAAS,EAATA,SAAvC;AAAkDC,QAAAA,KAAK,EAALA;AAAlD,OAAD,CAAjB,CAAR;AACH,KAvBE,WAwBI,UAACC,CAAD,EAAO;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,CAArC;AACAvB,MAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACH,KA3BE,aA4BM;AAAA,aAAME,QAAQ,CAACP,cAAc,CAAC,KAAD,CAAf,CAAd;AAAA,KA5BN,CAAP,CAFiB,CA8BoC;AACxD,GA/BD;AAgCH,CAjCM","sourcesContent":["const githubRepos = \"https://api.github.com/users/nigeymc/repos\";\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload,\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(setDataLoading(true)); // <-- start loading\n        return fetch(githubRepos, {\n            headers: {\n                'Accept': 'application/vnd.github.v3+json'\n            }\n        })\n            .then(response => response.json()) //Converting the response to a JSON object\n            .then(data => {\n\n                const repos = Object.entries(data);\n\n                const arr = repos.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const filteredReposArr = arr.filter((item, key) => {\n                    if (typeof item !== \"string\") {\n                        return item;\n                    }\n                }, []);\n\n                const [, endNav, expensify, portfolio, , , hooks] = filteredReposArr;\n\n                dispatch(fetchDataSuccess({ filteredReposArr, endNav, expensify, portfolio, hooks }));\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n            .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n\n\n"]},"metadata":{},"sourceType":"module"}