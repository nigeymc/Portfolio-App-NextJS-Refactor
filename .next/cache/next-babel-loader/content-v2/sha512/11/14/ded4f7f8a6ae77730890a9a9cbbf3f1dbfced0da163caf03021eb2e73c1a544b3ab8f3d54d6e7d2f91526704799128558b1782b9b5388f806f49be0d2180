{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n  type: \"FETCH_DATA_LOADING\",\n  payload: loading\n});\n\nconst fetchDataSuccess = payload => ({\n  type: \"FETCH_DATA_SUCCESS\",\n  payload\n});\n\nconst fetchDataFailure = () => ({\n  type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const setTextFilter = (text = '') => ({\n  type: 'SET_TEXT_FILTER',\n  text\n});\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(setDataLoading(true)); // <-- start loading\n\n    return database.ref('skillsPage').once('value').then(snapshot => {\n      const skillsPage = [];\n      snapshot.forEach(child => {\n        skillsPage.push(_objectSpread({}, child.val()));\n      });\n      const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n      const educationArr = education.education.reduce((total, amount) => {\n        return total.concat(amount);\n      }, []);\n      const [university, school] = educationArr;\n      const setLanguages = languages.languages;\n      const setFrameworks = frameworks.libraries_frameworks;\n      const setServices = services.services;\n      const setTools = tools.tools;\n      const setSkillset = skillset.skillset;\n      const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n      const skillsKeys = skillsPage.map(item => {\n        return Object.keys(item);\n      }, []);\n      const [langKey, frameworksKey, servicesKey, toolsKey, skillsetKey] = skillsKeys;\n      const skillsValues = skillsPage.map(item => {\n        return Object.values(item);\n      }, []);\n      const skillsValuesArr = skillsValues.reduce((sum, item) => {\n        return sum.concat(item);\n      }, []);\n      const [languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals] = skillsValuesArr;\n      dispatch(fetchDataSuccess({\n        languages,\n        frameworks,\n        services,\n        tools,\n        skillset,\n        university,\n        school,\n        searchList,\n        langKey,\n        frameworksKey,\n        servicesKey,\n        toolsKey,\n        skillsetKey,\n        languagesVals,\n        frameworksVals,\n        servicesVals,\n        toolsVals,\n        skillsetVals\n      }));\n    }).catch(e => {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    }).finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/actions/fetchSkillsDataAction.js"],"names":["database","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","setTextFilter","text","fetchData","dispatch","ref","once","then","snapshot","skillsPage","forEach","child","push","val","languages","frameworks","services","tools","skillset","education","educationArr","reduce","total","amount","concat","university","school","setLanguages","setFrameworks","libraries_frameworks","setServices","setTools","setSkillset","searchList","skillsKeys","map","item","Object","keys","langKey","frameworksKey","servicesKey","toolsKey","skillsetKey","skillsValues","values","skillsValuesArr","sum","languagesVals","frameworksVals","servicesVals","toolsVals","skillsetVals","catch","e","console","error","finally"],"mappings":";;;;;;AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,KAAK;AAC/BC,EAAAA,IAAI,EAAE,oBADyB;AAE/BC,EAAAA,OAAO,EAAEF;AAFsB,CAAL,CAA9B;;AAKA,MAAMG,gBAAgB,GAAGD,OAAO,KAAK;AACjCD,EAAAA,IAAI,EAAE,oBAD2B;AAEjCC,EAAAA;AAFiC,CAAL,CAAhC;;AAKA,MAAME,gBAAgB,GAAG,OAAO;AAC5BH,EAAAA,IAAI,EAAE;AADsB,CAAP,CAAzB;;AAIA,OAAO,MAAMI,aAAa,GAAG,CAACC,IAAI,GAAG,EAAR,MAAgB;AACzCL,EAAAA,IAAI,EAAE,iBADmC;AAEzCK,EAAAA;AAFyC,CAAhB,CAAtB;AAKP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACT,cAAc,CAAC,IAAD,CAAf,CAAR,CADiB,CACe;;AAChC,WAAOD,QAAQ,CAACW,GAAT,CAAa,YAAb,EACFC,IADE,CACG,OADH,EAEFC,IAFE,CAEIC,QAAD,IAAc;AAChB,YAAMC,UAAU,GAAG,EAAnB;AAEAD,MAAAA,QAAQ,CAACE,OAAT,CAAkBC,KAAD,IAAW;AACxBF,QAAAA,UAAU,CAACG,IAAX,mBACOD,KAAK,CAACE,GAAN,EADP;AAGH,OAJD;AAKA,YAAM,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,SAAnD,IAAgEV,UAAtE;AAEA,YAAMW,YAAY,GAAGD,SAAS,CAACA,SAAV,CAAoBE,MAApB,CAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/D,eAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,OAFoB,EAElB,EAFkB,CAArB;AAIA,YAAM,CAACE,UAAD,EAAaC,MAAb,IAAuBN,YAA7B;AAEA,YAAMO,YAAY,GAAGb,SAAS,CAACA,SAA/B;AACA,YAAMc,aAAa,GAAGb,UAAU,CAACc,oBAAjC;AACA,YAAMC,WAAW,GAAGd,QAAQ,CAACA,QAA7B;AACA,YAAMe,QAAQ,GAAGd,KAAK,CAACA,KAAvB;AACA,YAAMe,WAAW,GAAGd,QAAQ,CAACA,QAA7B;AAEA,YAAMe,UAAU,GAAG,CAAC,GAAGN,YAAJ,EAAkB,GAAGC,aAArB,EAAoC,GAAGE,WAAvC,EAAoD,GAAGC,QAAvD,EAAiE,GAAGC,WAApE,CAAnB;AAEA,YAAME,UAAU,GAAGzB,UAAU,CAAC0B,GAAX,CAAgBC,IAAD,IAAU;AACxC,eAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,CAAP;AACH,OAFkB,EAEhB,EAFgB,CAAnB;AAIA,YAAM,CAACG,OAAD,EAAUC,aAAV,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,WAAhD,IAA+DT,UAArE;AAEA,YAAMU,YAAY,GAAGnC,UAAU,CAAC0B,GAAX,CAAgBC,IAAD,IAAU;AAC1C,eAAOC,MAAM,CAACQ,MAAP,CAAcT,IAAd,CAAP;AACH,OAFoB,EAElB,EAFkB,CAArB;AAIA,YAAMU,eAAe,GAAGF,YAAY,CAACvB,MAAb,CAAoB,CAAC0B,GAAD,EAAMX,IAAN,KAAe;AACvD,eAAOW,GAAG,CAACvB,MAAJ,CAAWY,IAAX,CAAP;AACH,OAFuB,EAErB,EAFqB,CAAxB;AAIA,YAAM,CAACY,aAAD,EAAgBC,cAAhB,EAAgCC,YAAhC,EAA8CC,SAA9C,EAAyDC,YAAzD,IAAyEN,eAA/E;AAEA1C,MAAAA,QAAQ,CAACL,gBAAgB,CAAC;AAAEe,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBC,QAAAA,QAAzB;AAAmCC,QAAAA,KAAnC;AAA0CC,QAAAA,QAA1C;AAAoDO,QAAAA,UAApD;AAAgEC,QAAAA,MAAhE;AAAwEO,QAAAA,UAAxE;AAAoFM,QAAAA,OAApF;AAA6FC,QAAAA,aAA7F;AAA4GC,QAAAA,WAA5G;AAAyHC,QAAAA,QAAzH;AAAmIC,QAAAA,WAAnI;AAAgJK,QAAAA,aAAhJ;AAA+JC,QAAAA,cAA/J;AAA+KC,QAAAA,YAA/K;AAA6LC,QAAAA,SAA7L;AAAwMC,QAAAA;AAAxM,OAAD,CAAjB,CAAR;AAEH,KA5CE,EA6CFC,KA7CE,CA6CKC,CAAD,IAAO;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,CAArC;AACAlD,MAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACH,KAhDE,EAiDFyD,OAjDE,CAiDM,MAAMrD,QAAQ,CAACT,cAAc,CAAC,KAAD,CAAf,CAjDpB,CAAP,CAFiB,CAmDoC;AACxD,GApDD;AAqDH,CAtDM","sourcesContent":["import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload,\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const setTextFilter = (text = '') => ({\n    type: 'SET_TEXT_FILTER',\n    text,\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(setDataLoading(true)); // <-- start loading\n        return database.ref('skillsPage')\n            .once('value')\n            .then((snapshot) => {\n                const skillsPage = [];\n\n                snapshot.forEach((child) => {\n                    skillsPage.push({\n                        ...child.val()\n                    });\n                });\n                const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n\n                const educationArr = education.education.reduce((total, amount) => {\n                    return total.concat(amount);\n                }, []);\n\n                const [university, school] = educationArr\n\n                const setLanguages = languages.languages;\n                const setFrameworks = frameworks.libraries_frameworks;\n                const setServices = services.services;\n                const setTools = tools.tools;\n                const setSkillset = skillset.skillset;\n\n                const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n\n                const skillsKeys = skillsPage.map((item) => {\n                    return Object.keys(item);\n                }, [])\n\n                const [langKey, frameworksKey, servicesKey, toolsKey, skillsetKey] = skillsKeys;\n\n                const skillsValues = skillsPage.map((item) => {\n                    return Object.values(item);\n                }, []);\n\n                const skillsValuesArr = skillsValues.reduce((sum, item) => {\n                    return sum.concat(item);\n                }, []);\n\n                const [languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals] = skillsValuesArr;\n\n                dispatch(fetchDataSuccess({ languages, frameworks, services, tools, skillset, university, school, searchList, langKey, frameworksKey, servicesKey, toolsKey, skillsetKey, languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals }));\n\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n            .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n"]},"metadata":{},"sourceType":"module"}