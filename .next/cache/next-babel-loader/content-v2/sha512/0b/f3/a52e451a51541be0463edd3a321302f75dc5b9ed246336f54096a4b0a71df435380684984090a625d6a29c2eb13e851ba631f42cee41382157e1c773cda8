{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport Layout from \"../components/Layout\";\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport QualificationsComponent from \"../components/QualificationsComponent\";\nimport SkillsGroups from \"../components/SkillsGroups\";\nimport SkillsList from \"../components/SkillsList\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Skills\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst MySkillsPage = props => {\n  const {\n    university,\n    school,\n    searchList,\n    error,\n    loading\n  } = props;\n  const {\n    0: text,\n    1: setText\n  } = useState('');\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const filter = searchList.filter(listItem => listItem.toLowerCase().includes(text.toLocaleLowerCase().trim()));\n  return /*#__PURE__*/_jsx(Layout, {\n    content: /*#__PURE__*/_jsx(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxs(\"section\", {\n        className: \"general-section\",\n        id: \"skills\",\n        children: [/*#__PURE__*/_jsx(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"general-section__content\",\n          children: [/*#__PURE__*/_jsxs(Col, {\n            children: [error && /*#__PURE__*/_jsx(Alert, {\n              className: \"alert__error--fetch\",\n              variant: \"info\",\n              children: \"Error fetching page content\"\n            }), loading ? /*#__PURE__*/_jsx(LoadingSpinner, {}) : /*#__PURE__*/_jsx(QualificationsComponent, {\n              university: university.university,\n              uniStudied: university.studied,\n              uniQualification: university.qualification,\n              other: university.other,\n              school: school.school,\n              schoolStudied: school.studied,\n              schoolQualification: school.qualification\n            })]\n          }), /*#__PURE__*/_jsx(Col, {\n            className: \"mt-5\",\n            children: /*#__PURE__*/_jsx(SkillsList, {\n              searchTerm: text,\n              handleChange: handleChange,\n              filter: filter\n            })\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport async function getStaticProps(context) {\n  return database.ref('skillsPage').once('value').then(snapshot => {\n    const skillsPage = [];\n    snapshot.forEach(child => {\n      skillsPage.push(_objectSpread({}, child.val()));\n    });\n    const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n    const educationArr = education.education.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    const [university, school] = educationArr;\n    const setLanguages = languages.languages;\n    const setFrameworks = frameworks.libraries_frameworks;\n    const setServices = services.services;\n    const setTools = tools.tools;\n    const setSkillset = skillset.skillset;\n    const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n    return {\n      props: {\n        university,\n        school,\n        searchList\n      }\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  });\n}\nexport { MySkillsPage as default };","map":null,"metadata":{},"sourceType":"module"}