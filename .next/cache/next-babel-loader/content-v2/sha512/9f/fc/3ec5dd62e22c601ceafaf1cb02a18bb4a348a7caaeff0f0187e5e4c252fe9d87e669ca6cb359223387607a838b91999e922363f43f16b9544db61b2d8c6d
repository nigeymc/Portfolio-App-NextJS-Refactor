{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-skills.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect } from 'react';\nimport useSWR from 'swr';\nimport Layout from \"../components/Layout\";\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport QualificationsComponent from \"../components/QualificationsComponent\";\nimport SkillsList from \"../components/SkillsList\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Skills\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst fetch = database => {\n  return database.ref('skillsPage').once('value').then(snapshot => {\n    const skillsPage = [];\n    snapshot.forEach(child => {\n      skillsPage.push(_objectSpread({}, child.val()));\n    });\n    const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n    const educationArr = education.education.reduce((total, amount) => {\n      return total.concat(amount);\n    }, []);\n    const [university, school] = educationArr;\n    const setLanguages = languages.languages;\n    const setFrameworks = frameworks.libraries_frameworks;\n    const setServices = services.services;\n    const setTools = tools.tools;\n    const setSkillset = skillset.skillset;\n    const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n    const skillsKeys = skillsPage.map(item => {\n      return Object.keys(item);\n    }, []);\n    const [langKey, frameworksKey, servicesKey, toolsKey, skillsetKey] = skillsKeys;\n    const skillsValues = skillsPage.map(item => {\n      return Object.values(item);\n    }, []);\n    const skillsValuesArr = skillsValues.reduce((sum, item) => {\n      return sum.concat(item);\n    }, []);\n    const [languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals] = skillsValuesArr;\n    dispatch(fetchDataSuccess({\n      languages,\n      frameworks,\n      services,\n      tools,\n      skillset,\n      university,\n      school,\n      searchList,\n      langKey,\n      frameworksKey,\n      servicesKey,\n      toolsKey,\n      skillsetKey,\n      languagesVals,\n      frameworksVals,\n      servicesVals,\n      toolsVals,\n      skillsetVals\n    }));\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    dispatch(fetchDataFailure());\n  }).finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n};\n\nconst MySkillsPage = () => {\n  const {\n    data,\n    error\n  } = useSWR(database, fetch); // const dispatch = useDispatch();\n  // const {\n  //     error,\n  //     loading,\n  //     university,\n  //     school,\n  //     searchList,\n  //     text\n  // } = useSelector(state => state.skillsPage);\n  // useEffect(() => {\n  //     dispatch(fetchData());\n  // }, []);\n\n  const handleChange = e => {\n    dispatch(setTextFilter(e.target.value));\n  };\n\n  const filter = searchList.filter(listItem => listItem.toLowerCase().includes(text.toLocaleLowerCase().trim()));\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"general-section\",\n        id: \"skills\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-section__content\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              className: \"alert__error--fetch\",\n              variant: \"info\",\n              children: \"Error fetching page content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 42\n            }, this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this) : /*#__PURE__*/_jsxDEV(QualificationsComponent, {\n              university: university.university,\n              uniStudied: university.studied,\n              uniQualification: university.qualification,\n              other: university.other,\n              school: school.school,\n              schoolStudied: school.studied,\n              schoolQualification: school.qualification\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            children: /*#__PURE__*/_jsxDEV(SkillsList, {\n              searchTerm: text,\n              handleChange: handleChange,\n              filter: filter\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, this);\n};\n\nexport { MySkillsPage as default };","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-skills.js"],"names":["useEffect","useSWR","Layout","Container","Col","PageHeader","QualificationsComponent","SkillsList","LoadingSpinner","database","pageTitle","firstWord","secondWord","fetch","ref","once","then","snapshot","skillsPage","forEach","child","push","val","languages","frameworks","services","tools","skillset","education","educationArr","reduce","total","amount","concat","university","school","setLanguages","setFrameworks","libraries_frameworks","setServices","setTools","setSkillset","searchList","skillsKeys","map","item","Object","keys","langKey","frameworksKey","servicesKey","toolsKey","skillsetKey","skillsValues","values","skillsValuesArr","sum","languagesVals","frameworksVals","servicesVals","toolsVals","skillsetVals","dispatch","fetchDataSuccess","catch","e","console","error","fetchDataFailure","finally","setDataLoading","MySkillsPage","data","handleChange","setTextFilter","target","value","filter","listItem","toLowerCase","includes","text","toLocaleLowerCase","trim","loading","studied","qualification","other","default"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,KAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,GAApB,QAA+B,iBAA/B;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,uBAAP,MAAoC,uCAApC;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAMC,SAAS,GAAG;AACdC,EAAAA,SAAS,EAAE,IADG;AAEdC,EAAAA,UAAU,EAAE;AAFE,CAAlB;AAKA,MAAM;AAAED,EAAAA,SAAF;AAAaC,EAAAA;AAAb,IAA4BF,SAAlC;;AAEA,MAAMG,KAAK,GAAIJ,QAAD,IAAc;AACxB,SAAOA,QAAQ,CAACK,GAAT,CAAa,YAAb,EACFC,IADE,CACG,OADH,EAEFC,IAFE,CAEIC,QAAD,IAAc;AAChB,UAAMC,UAAU,GAAG,EAAnB;AAEAD,IAAAA,QAAQ,CAACE,OAAT,CAAkBC,KAAD,IAAW;AACxBF,MAAAA,UAAU,CAACG,IAAX,mBACOD,KAAK,CAACE,GAAN,EADP;AAGH,KAJD;AAKA,UAAM,CAACC,SAAD,EAAYC,UAAZ,EAAwBC,QAAxB,EAAkCC,KAAlC,EAAyCC,QAAzC,EAAmDC,SAAnD,IAAgEV,UAAtE;AAEA,UAAMW,YAAY,GAAGD,SAAS,CAACA,SAAV,CAAoBE,MAApB,CAA2B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/D,aAAOD,KAAK,CAACE,MAAN,CAAaD,MAAb,CAAP;AACH,KAFoB,EAElB,EAFkB,CAArB;AAIA,UAAM,CAACE,UAAD,EAAaC,MAAb,IAAuBN,YAA7B;AAEA,UAAMO,YAAY,GAAGb,SAAS,CAACA,SAA/B;AACA,UAAMc,aAAa,GAAGb,UAAU,CAACc,oBAAjC;AACA,UAAMC,WAAW,GAAGd,QAAQ,CAACA,QAA7B;AACA,UAAMe,QAAQ,GAAGd,KAAK,CAACA,KAAvB;AACA,UAAMe,WAAW,GAAGd,QAAQ,CAACA,QAA7B;AAEA,UAAMe,UAAU,GAAG,CAAC,GAAGN,YAAJ,EAAkB,GAAGC,aAArB,EAAoC,GAAGE,WAAvC,EAAoD,GAAGC,QAAvD,EAAiE,GAAGC,WAApE,CAAnB;AAEA,UAAME,UAAU,GAAGzB,UAAU,CAAC0B,GAAX,CAAgBC,IAAD,IAAU;AACxC,aAAOC,MAAM,CAACC,IAAP,CAAYF,IAAZ,CAAP;AACH,KAFkB,EAEhB,EAFgB,CAAnB;AAIA,UAAM,CAACG,OAAD,EAAUC,aAAV,EAAyBC,WAAzB,EAAsCC,QAAtC,EAAgDC,WAAhD,IAA+DT,UAArE;AAEA,UAAMU,YAAY,GAAGnC,UAAU,CAAC0B,GAAX,CAAgBC,IAAD,IAAU;AAC1C,aAAOC,MAAM,CAACQ,MAAP,CAAcT,IAAd,CAAP;AACH,KAFoB,EAElB,EAFkB,CAArB;AAIA,UAAMU,eAAe,GAAGF,YAAY,CAACvB,MAAb,CAAoB,CAAC0B,GAAD,EAAMX,IAAN,KAAe;AACvD,aAAOW,GAAG,CAACvB,MAAJ,CAAWY,IAAX,CAAP;AACH,KAFuB,EAErB,EAFqB,CAAxB;AAIA,UAAM,CAACY,aAAD,EAAgBC,cAAhB,EAAgCC,YAAhC,EAA8CC,SAA9C,EAAyDC,YAAzD,IAAyEN,eAA/E;AAEAO,IAAAA,QAAQ,CAACC,gBAAgB,CAAC;AAAExC,MAAAA,SAAF;AAAaC,MAAAA,UAAb;AAAyBC,MAAAA,QAAzB;AAAmCC,MAAAA,KAAnC;AAA0CC,MAAAA,QAA1C;AAAoDO,MAAAA,UAApD;AAAgEC,MAAAA,MAAhE;AAAwEO,MAAAA,UAAxE;AAAoFM,MAAAA,OAApF;AAA6FC,MAAAA,aAA7F;AAA4GC,MAAAA,WAA5G;AAAyHC,MAAAA,QAAzH;AAAmIC,MAAAA,WAAnI;AAAgJK,MAAAA,aAAhJ;AAA+JC,MAAAA,cAA/J;AAA+KC,MAAAA,YAA/K;AAA6LC,MAAAA,SAA7L;AAAwMC,MAAAA;AAAxM,KAAD,CAAjB,CAAR;AAEH,GA5CE,EA6CFG,KA7CE,CA6CKC,CAAD,IAAO;AACVC,IAAAA,OAAO,CAACC,KAAR,CAAc,qBAAd,EAAqCF,CAArC;AACAH,IAAAA,QAAQ,CAACM,gBAAgB,EAAjB,CAAR;AACH,GAhDE,EAiDFC,OAjDE,CAiDM,MAAMP,QAAQ,CAACQ,cAAc,CAAC,KAAD,CAAf,CAjDpB,CAAP,CADwB,CAkD6B;AACxD,CAnDD;;AAqDA,MAAMC,YAAY,GAAG,MAAM;AACvB,QAAM;AAAEC,IAAAA,IAAF;AAAQL,IAAAA;AAAR,MAAkBlE,MAAM,CAACQ,QAAD,EAAWI,KAAX,CAA9B,CADuB,CAGvB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,QAAM4D,YAAY,GAAIR,CAAD,IAAO;AACxBH,IAAAA,QAAQ,CAACY,aAAa,CAACT,CAAC,CAACU,MAAF,CAASC,KAAV,CAAd,CAAR;AAEH,GAHD;;AAKA,QAAMC,MAAM,GAAGnC,UAAU,CAACmC,MAAX,CAAkBC,QAAQ,IACrCA,QAAQ,CAACC,WAAT,GAAuBC,QAAvB,CAAgCC,IAAI,CAACC,iBAAL,GAAyBC,IAAzB,EAAhC,CADW,CAAf;AAKA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,eACX,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA,6BACI;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAqC,QAAA,EAAE,EAAC,QAAxC;AAAA,gCACI,QAAC,UAAD;AAAY,UAAA,SAAS,EAAExE,SAAvB;AAAkC,UAAA,UAAU,EAAEC;AAA9C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAK,UAAA,SAAS,EAAC,0BAAf;AAAA,kCACI,QAAC,GAAD;AAAA,uBAEQuD,KAAK,iBAAI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,qBAAjB;AAAuC,cAAA,OAAO,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFjB,EAIKiB,OAAO,gBACJ,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,oBADI,gBAGJ,QAAC,uBAAD;AAAyB,cAAA,UAAU,EAAElD,UAAU,CAACA,UAAhD;AAA4D,cAAA,UAAU,EAAEA,UAAU,CAACmD,OAAnF;AAA4F,cAAA,gBAAgB,EAAEnD,UAAU,CAACoD,aAAzH;AAAwI,cAAA,KAAK,EAAEpD,UAAU,CAACqD,KAA1J;AAAiK,cAAA,MAAM,EAAEpD,MAAM,CAACA,MAAhL;AAAwL,cAAA,aAAa,EAAEA,MAAM,CAACkD,OAA9M;AAAuN,cAAA,mBAAmB,EAAElD,MAAM,CAACmD;AAAnP;AAAA;AAAA;AAAA;AAAA,oBAPR;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAWI,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,MAAf;AAAA,mCACI,QAAC,UAAD;AAAY,cAAA,UAAU,EAAEL,IAAxB;AAA8B,cAAA,YAAY,EAAER,YAA5C;AAA0D,cAAA,MAAM,EAAEI;AAAlE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CArDD;;AAuDA,SAASN,YAAY,IAAIiB,OAAzB","sourcesContent":["import { useEffect } from 'react';\nimport useSWR from 'swr';\nimport Layout from \"../components/Layout\";\nimport { Container, Col } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport QualificationsComponent from \"../components/QualificationsComponent\";\nimport SkillsList from \"../components/SkillsList\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\n\nconst pageTitle = {\n    firstWord: \"My\",\n    secondWord: \"Skills\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst fetch = (database) => {\n    return database.ref('skillsPage')\n        .once('value')\n        .then((snapshot) => {\n            const skillsPage = [];\n\n            snapshot.forEach((child) => {\n                skillsPage.push({\n                    ...child.val()\n                });\n            });\n            const [languages, frameworks, services, tools, skillset, education] = skillsPage;\n\n            const educationArr = education.education.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            const [university, school] = educationArr\n\n            const setLanguages = languages.languages;\n            const setFrameworks = frameworks.libraries_frameworks;\n            const setServices = services.services;\n            const setTools = tools.tools;\n            const setSkillset = skillset.skillset;\n\n            const searchList = [...setLanguages, ...setFrameworks, ...setServices, ...setTools, ...setSkillset];\n\n            const skillsKeys = skillsPage.map((item) => {\n                return Object.keys(item);\n            }, [])\n\n            const [langKey, frameworksKey, servicesKey, toolsKey, skillsetKey] = skillsKeys;\n\n            const skillsValues = skillsPage.map((item) => {\n                return Object.values(item);\n            }, []);\n\n            const skillsValuesArr = skillsValues.reduce((sum, item) => {\n                return sum.concat(item);\n            }, []);\n\n            const [languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals] = skillsValuesArr;\n\n            dispatch(fetchDataSuccess({ languages, frameworks, services, tools, skillset, university, school, searchList, langKey, frameworksKey, servicesKey, toolsKey, skillsetKey, languagesVals, frameworksVals, servicesVals, toolsVals, skillsetVals }));\n\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            dispatch(fetchDataFailure());\n        })\n        .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n}\n\nconst MySkillsPage = () => {\n    const { data, error } = useSWR(database, fetch);\n\n    // const dispatch = useDispatch();\n\n    // const {\n    //     error,\n    //     loading,\n    //     university,\n    //     school,\n    //     searchList,\n    //     text\n    // } = useSelector(state => state.skillsPage);\n\n    // useEffect(() => {\n    //     dispatch(fetchData());\n    // }, []);\n\n    const handleChange = (e) => {\n        dispatch(setTextFilter(e.target.value))\n\n    };\n\n    const filter = searchList.filter(listItem =>\n        listItem.toLowerCase().includes(text.toLocaleLowerCase().trim())\n    );\n\n\n    return (\n        <Layout content={\n            <Container fluid className=\"p-0\">\n                <section className=\"general-section\" id=\"skills\">\n                    <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                    <div className=\"general-section__content\">\n                        <Col>\n                            {\n                                error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                            }\n                            {loading ? (\n                                <LoadingSpinner />\n                            ) : (\n                                <QualificationsComponent university={university.university} uniStudied={university.studied} uniQualification={university.qualification} other={university.other} school={school.school} schoolStudied={school.studied} schoolQualification={school.qualification} />\n                            )}\n                        </Col>\n                        <Col className=\"mt-5\">\n                            <SkillsList searchTerm={text} handleChange={handleChange} filter={filter} />\n                        </Col>\n\n                    </div>\n                </section>\n            </Container>\n        } />\n    )\n}\n\nexport { MySkillsPage as default };"]},"metadata":{},"sourceType":"module"}