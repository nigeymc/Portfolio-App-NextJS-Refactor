{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Container, Col } from 'react-bootstrap';\nimport Layout from \"../components/Layout\";\nimport PageHeader from \"../components/PageHeader\";\nimport ExperienceCard from \"../components/ExperienceCard\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Experience\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst MyExepriencePage = props => {\n  const {\n    loading,\n    error,\n    employment\n  } = props;\n  return /*#__PURE__*/_jsx(Layout, {\n    content: /*#__PURE__*/_jsx(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxs(\"section\", {\n        className: \"general-section\",\n        id: \"experience\",\n        children: [/*#__PURE__*/_jsx(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"general-section__content\",\n          children: /*#__PURE__*/_jsxs(Col, {\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              children: \"2009 - Today\"\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"cards\",\n              children: [error && /*#__PURE__*/_jsx(Alert, {\n                className: \"alert__error--fetch\",\n                variant: \"info\",\n                children: \"Error fetching page content\"\n              }), loading ? /*#__PURE__*/_jsx(LoadingSpinner, {}) : employment && employment.map(company => /*#__PURE__*/_jsx(ExperienceCard, {\n                logo: company.logo,\n                title: company.companyName,\n                dates: company.dates,\n                description: company.description,\n                pageUrl: company.pageUrl\n              }, company.companyName))]\n            })]\n          })\n        })]\n      })\n    })\n  });\n};\n\nexport async function getStaticProps(context) {\n  return database.ref('employment').once('value').then(snapshot => {\n    const employment = [];\n    snapshot.forEach(child => {\n      employment.push(_objectSpread({}, child.val()));\n    });\n    return {\n      props: {\n        employment\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  }); // <-- complete loading\n}\nexport { MyExepriencePage as default };","map":null,"metadata":{},"sourceType":"module"}