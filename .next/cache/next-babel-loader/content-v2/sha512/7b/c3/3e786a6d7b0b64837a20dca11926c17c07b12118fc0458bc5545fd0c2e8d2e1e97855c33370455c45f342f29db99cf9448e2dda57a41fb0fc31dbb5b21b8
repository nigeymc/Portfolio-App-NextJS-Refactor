{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from \"../components/Layout\";\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport GithubProjects from \"../components/GithubProjectsComponent\";\nimport ProjectCard from \"../components/NonGithubProjectCard\";\nimport database from '../firebase/firebase';\nconst pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Projects\"\n};\nconst {\n  firstWord,\n  secondWord\n} = pageTitle;\n\nconst MyProjectsPage = props => {\n  const {\n    error,\n    loading,\n    portfolioThumbnail,\n    expensifyThumbnail,\n    newFeaturesThumbnail,\n    portfolioNextThumbnail,\n    nonGithubProjects\n  } = props;\n  return /*#__PURE__*/_jsx(Layout, {\n    content: /*#__PURE__*/_jsx(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxs(\"section\", {\n        className: \"general-section\",\n        id: \"projects\",\n        children: [/*#__PURE__*/_jsx(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"general-section__content\",\n          children: [/*#__PURE__*/_jsxs(Col, {\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              children: \"Code\"\n            }), /*#__PURE__*/_jsx(\"p\", {\n              children: \"Some of my personal projects.\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"cards\",\n              children: /*#__PURE__*/_jsx(GithubProjects, {\n                portfolioThumbnail: portfolioThumbnail,\n                portfolioNextThumbnail: portfolioNextThumbnail,\n                expensifyThumbnail: expensifyThumbnail,\n                newFeaturesThumbnail: newFeaturesThumbnail\n              })\n            })]\n          }), /*#__PURE__*/_jsxs(Col, {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsx(\"h3\", {\n              children: \"River Island\"\n            }), /*#__PURE__*/_jsxs(\"p\", {\n              children: [\"Examples of some of the work I did whilst working at River Island for RI Tech. As the code is part of a private repo, below are some screenshots instead. Working examples of some of these features can be found at \", /*#__PURE__*/_jsx(\"a\", {\n                title: \"The River Island website\",\n                href: \"https://www.riverisland.com/\",\n                target: \"_blank\",\n                children: \"riverisland.com\"\n              }), \" \"]\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"cards\",\n              children: [error && /*#__PURE__*/_jsx(Alert, {\n                className: \"alert__error--fetch\",\n                variant: \"info\",\n                children: \"Error fetching page content\"\n              }), loading ? /*#__PURE__*/_jsx(LoadingSpinner, {}) : nonGithubProjects && nonGithubProjects.map(project => /*#__PURE__*/_jsx(ProjectCard, {\n                thumbnail: project.thumbnail,\n                title: project.title,\n                category: project.category,\n                description: project.summary\n              }, project.title.toLowerCase().replace(\" \", \"-\")))]\n            })]\n          })]\n        })]\n      })\n    })\n  });\n};\n\nexport async function getStaticProps(context) {\n  return database.ref().once('value').then(snapshot => {\n    const data = snapshot.val();\n    const githubProjects = data.githubProjects;\n    const [githubThumbnails] = githubProjects;\n    const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, portfolioNextThumbnail] = githubThumbnails.thumbnails;\n    const nonGithubProjects = data.nonGithubProjects;\n    return {\n      props: {\n        portfolioThumbnail,\n        expensifyThumbnail,\n        newFeaturesThumbnail,\n        portfolioNextThumbnail,\n        nonGithubProjects\n      } // will be passed to the page component as props\n\n    };\n  }).catch(e => {\n    console.error('Error fetching data', e);\n    return {\n      props: {\n        error: true\n      } // will be passed to the page component as props\n\n    };\n  }).finally(() => {\n    return {\n      props: {\n        loading: false\n      } // will be passed to the page component as props\n\n    };\n  }); // <-- complete loading\n}\nexport { MyProjectsPage as default };","map":null,"metadata":{},"sourceType":"module"}