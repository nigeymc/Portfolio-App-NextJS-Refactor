{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-projects.js\",\n    _this = this;\n\nimport Layout from \"../components/Layout\";\nimport { Fragment } from 'react';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport GithubProjects from \"../components/GithubProjectsComponent\";\nimport ProjectCard from \"../components/NonGithubProjectCard\";\nvar pageTitle = {\n  firstWord: \"My\",\n  secondWord: \"Projects\"\n};\nvar firstWord = pageTitle.firstWord,\n    secondWord = pageTitle.secondWord;\n\nvar MyProjectsPage = function MyProjectsPage(props) {\n  var error = props.error,\n      loading = props.loading,\n      portfolioThumbnail = props.portfolioThumbnail,\n      expensifyThumbnail = props.expensifyThumbnail,\n      newFeaturesThumbnail = props.newFeaturesThumbnail,\n      nonGithubProjects = props.nonGithubProjects;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    content: /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"general-section\",\n        id: \"projects\",\n        children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n          firstWord: firstWord,\n          secondWord: secondWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"general-section__content\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Code\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Some of my personal projects.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: /*#__PURE__*/_jsxDEV(GithubProjects, {\n                portfolioThumbnail: portfolioThumbnail,\n                expensifyThumbnail: expensifyThumbnail,\n                newFeaturesThumbnail: newFeaturesThumbnail\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 33\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"River Island\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Examples of some of the work I did whilst working at River Island for RI Tech. As the code is part of a private repo, below are some screenshots instead. Working examples of some of these features can be found at \", /*#__PURE__*/_jsxDEV(\"a\", {\n                title: \"The River Island website\",\n                href: \"https://www.riverisland.com/\",\n                target: \"_blank\",\n                children: \"riverisland.com\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 245\n              }, _this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cards\",\n              children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n                className: \"alert__error--fetch\",\n                variant: \"info\",\n                children: \"Error fetching page content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 46\n              }, _this), loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 37\n              }, _this) : nonGithubProjects && nonGithubProjects.map(function (project) {\n                return /*#__PURE__*/_jsxDEV(ProjectCard, {\n                  thumbnail: project.thumbnail,\n                  title: project.title,\n                  category: project.category,\n                  description: project.summary\n                }, project.title.toLowerCase().replace(\" \", \"-\"), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 41\n                }, _this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = MyProjectsPage;\nexport var __N_SSG = true;\nexport { MyProjectsPage as default };\n\nvar _c;\n\n$RefreshReg$(_c, \"MyProjectsPage\");","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/pages/my-projects.js"],"names":["Layout","Fragment","Container","Col","Alert","PageHeader","LoadingSpinner","GithubProjects","ProjectCard","pageTitle","firstWord","secondWord","MyProjectsPage","props","error","loading","portfolioThumbnail","expensifyThumbnail","newFeaturesThumbnail","nonGithubProjects","map","project","thumbnail","title","category","summary","toLowerCase","replace","default"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout\";\nimport { Fragment } from 'react';\nimport { Container, Col, Alert } from 'react-bootstrap';\nimport PageHeader from \"../components/PageHeader\";\nimport LoadingSpinner from \"../components/LoadingSpinner\";\nimport GithubProjects from \"../components/GithubProjectsComponent\";\nimport ProjectCard from \"../components/NonGithubProjectCard\";\nimport database from '../firebase/firebase';\n\nconst githubRepos = \"https://api.github.com/users/nigeymc/repos\";\n\nconst pageTitle = {\n    firstWord: \"My\",\n    secondWord: \"Projects\"\n}\n\nconst { firstWord, secondWord } = pageTitle;\n\nconst MyProjectsPage = (props) => {\n    const { error, loading, portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects } = props;\n\n    return (\n        <Layout content={\n            <Container fluid className=\"p-0\">\n                <section className=\"general-section\" id=\"projects\">\n                    <PageHeader firstWord={firstWord} secondWord={secondWord} />\n                    <div className=\"general-section__content\">\n                        <Col>\n                            <h3>Code</h3>\n                            <p>Some of my personal projects.</p>\n                            <div className=\"cards\">\n                                <GithubProjects portfolioThumbnail={portfolioThumbnail} expensifyThumbnail={expensifyThumbnail} newFeaturesThumbnail={newFeaturesThumbnail} />\n                            </div>\n                        </Col>\n                        <Col className=\"mt-5\">\n                            <h3>River Island</h3>\n                            <p>Examples of some of the work I did whilst working at River Island for RI Tech. As the code is part of a private repo, below are some screenshots instead. Working examples of some of these features can be found at <a title=\"The River Island website\" href=\"https://www.riverisland.com/\" target=\"_blank\">riverisland.com</a> </p>\n                            <div className=\"cards\">\n                                {\n                                    error && <Alert className=\"alert__error--fetch\" variant=\"info\">Error fetching page content</Alert>\n                                }\n                                {loading ? (\n                                    <LoadingSpinner />\n                                ) : (\n                                    nonGithubProjects && nonGithubProjects.map((project) => (\n                                        <ProjectCard key={project.title.toLowerCase().replace(\" \", \"-\")} thumbnail={project.thumbnail} title={project.title} category={project.category} description={project.summary} />\n\n                                    ))\n                                )}\n                            </div>\n                        </Col>\n                    </div>\n                </section>\n            </Container>\n        } />\n    )\n}\n\nexport async function getStaticProps(context) {\n\n    return database.ref()\n        .once('value')\n        .then((snapshot) => {\n            const data = snapshot.val();\n            const githubProjects = data.githubProjects;\n            const [githubThumbnails] = githubProjects;\n            const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail] = githubThumbnails.thumbnails\n            const nonGithubProjects = data.nonGithubProjects;\n            return {\n                props: { portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects }, // will be passed to the page component as props\n            };\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            return {\n                props: { error: true }, // will be passed to the page component as props\n            };\n        })\n        .finally(() => {\n            return {\n                props: { loading: false }, // will be passed to the page component as props\n            };\n        }); // <-- complete loading\n\n    return fetch(githubRepos, {\n        headers: {\n            'Accept': 'application/vnd.github.v3+json'\n        }\n    })\n        .then(response => response.json()) //Converting the response to a JSON object\n        .then(data => {\n\n            const repos = Object.entries(data);\n\n            const arr = repos.reduce((total, amount) => {\n                return total.concat(amount);\n            }, []);\n\n            const filteredReposArr = arr.filter((item, key) => {\n                if (typeof item !== \"string\") {\n                    return item;\n                }\n            }, []);\n\n            const [, endNav, expensify, portfolio, , hooks] = filteredReposArr;\n\n            dispatch(fetchDataSuccess({ filteredReposArr, endNav, expensify, portfolio, hooks }));\n        })\n        .catch((e) => {\n            console.error('Error fetching data', e);\n            dispatch(fetchDataFailure());\n        })\n        .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n}\n\nexport { MyProjectsPage as default };"]},"metadata":{},"sourceType":"module"}