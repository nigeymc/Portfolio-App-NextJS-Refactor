{"ast":null,"code":"import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n  type: \"FETCH_DATA_LOADING\",\n  payload: loading\n});\n\nconst fetchDataSuccess = payload => ({\n  type: \"FETCH_DATA_SUCCESS\",\n  payload // { firstName, lastName }\n\n});\n\nconst fetchDataFailure = () => ({\n  type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n  return dispatch => {\n    dispatch(setDataLoading(true)); // <-- start loading\n\n    return database.ref().once('value').then(snapshot => {\n      const portfolioData = snapshot.val();\n      const githubProjects = portfolioData.githubProjects;\n      const [githubThumbnails] = githubProjects;\n      const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail] = githubThumbnails.thumbnails;\n      const nonGithubProjects = portfolioData.nonGithubProjects;\n      console.log(nonGithubProjects);\n      dispatch(fetchDataSuccess({\n        portfolioThumbnail,\n        expensifyThumbnail,\n        newFeaturesThumbnail,\n        nonGithubProjects\n      }));\n    }).catch(e => {\n      console.error('Error fetching data', e);\n      dispatch(fetchDataFailure());\n    }).finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n  };\n};","map":{"version":3,"sources":["/Users/niallmckenna/Dropbox/A-react-apps/portfolio-app-nextjs/actions/fetchProjectsDataAction.js"],"names":["database","setDataLoading","loading","type","payload","fetchDataSuccess","fetchDataFailure","fetchData","dispatch","ref","once","then","snapshot","portfolioData","val","githubProjects","githubThumbnails","portfolioThumbnail","expensifyThumbnail","newFeaturesThumbnail","thumbnails","nonGithubProjects","console","log","catch","e","error","finally"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,sBAArB;;AAEA,MAAMC,cAAc,GAAGC,OAAO,KAAK;AAC/BC,EAAAA,IAAI,EAAE,oBADyB;AAE/BC,EAAAA,OAAO,EAAEF;AAFsB,CAAL,CAA9B;;AAKA,MAAMG,gBAAgB,GAAGD,OAAO,KAAK;AACjCD,EAAAA,IAAI,EAAE,oBAD2B;AAEjCC,EAAAA,OAFiC,CAExB;;AAFwB,CAAL,CAAhC;;AAKA,MAAME,gBAAgB,GAAG,OAAO;AAC5BH,EAAAA,IAAI,EAAE;AADsB,CAAP,CAAzB;;AAIA,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACP,cAAc,CAAC,IAAD,CAAf,CAAR,CADiB,CACe;;AAChC,WAAOD,QAAQ,CAACS,GAAT,GACFC,IADE,CACG,OADH,EAEFC,IAFE,CAEIC,QAAD,IAAc;AAChB,YAAMC,aAAa,GAAGD,QAAQ,CAACE,GAAT,EAAtB;AACA,YAAMC,cAAc,GAAGF,aAAa,CAACE,cAArC;AACA,YAAM,CAACC,gBAAD,IAAqBD,cAA3B;AACA,YAAM,CAACE,kBAAD,EAAqBC,kBAArB,EAAyCC,oBAAzC,IAAiEH,gBAAgB,CAACI,UAAxF;AACA,YAAMC,iBAAiB,GAAGR,aAAa,CAACQ,iBAAxC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,iBAAZ;AAEAb,MAAAA,QAAQ,CAACH,gBAAgB,CAAC;AAAEY,QAAAA,kBAAF;AAAsBC,QAAAA,kBAAtB;AAA0CC,QAAAA,oBAA1C;AAAgEE,QAAAA;AAAhE,OAAD,CAAjB,CAAR;AACH,KAXE,EAYFG,KAZE,CAYKC,CAAD,IAAO;AACVH,MAAAA,OAAO,CAACI,KAAR,CAAc,qBAAd,EAAqCD,CAArC;AACAjB,MAAAA,QAAQ,CAACF,gBAAgB,EAAjB,CAAR;AACH,KAfE,EAgBFqB,OAhBE,CAgBM,MAAMnB,QAAQ,CAACP,cAAc,CAAC,KAAD,CAAf,CAhBpB,CAAP,CAFiB,CAkBoC;AACxD,GAnBD;AAoBH,CArBM","sourcesContent":["import database from '../firebase/firebase';\n\nconst setDataLoading = loading => ({\n    type: \"FETCH_DATA_LOADING\",\n    payload: loading,\n});\n\nconst fetchDataSuccess = payload => ({\n    type: \"FETCH_DATA_SUCCESS\",\n    payload, // { firstName, lastName }\n});\n\nconst fetchDataFailure = () => ({\n    type: \"FETCH_DATA_FAILURE\"\n});\n\nexport const fetchData = () => {\n    return (dispatch) => {\n        dispatch(setDataLoading(true)); // <-- start loading\n        return database.ref()\n            .once('value')\n            .then((snapshot) => {\n                const portfolioData = snapshot.val();\n                const githubProjects = portfolioData.githubProjects;\n                const [githubThumbnails] = githubProjects;\n                const [portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail] = githubThumbnails.thumbnails\n                const nonGithubProjects = portfolioData.nonGithubProjects;\n                console.log(nonGithubProjects);\n\n                dispatch(fetchDataSuccess({ portfolioThumbnail, expensifyThumbnail, newFeaturesThumbnail, nonGithubProjects }));\n            })\n            .catch((e) => {\n                console.error('Error fetching data', e);\n                dispatch(fetchDataFailure());\n            })\n            .finally(() => dispatch(setDataLoading(false))); // <-- complete loading\n    };\n};\n"]},"metadata":{},"sourceType":"module"}